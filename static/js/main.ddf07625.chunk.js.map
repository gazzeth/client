{"version":3,"sources":["entrypoint/presenters/web/themes/index.jsx","entrypoint/presenters/web/actions/walletActions.ts","entrypoint/presenters/web/reducers/walletReducer.ts","entrypoint/presenters/web/reducers/allReducers.ts","entrypoint/presenters/web/store/store.ts","entrypoint/presenters/web/components/Error/styles.jsx","constants/urls.ts","entrypoint/presenters/web/components/Error/Error.tsx","entrypoint/presenters/web/components/Layout/styles.jsx","entrypoint/presenters/web/components/Header/styles.jsx","entrypoint/presenters/web/components/WalletModal/styles.jsx","entrypoint/presenters/web/components/Modal/styles.jsx","entrypoint/presenters/web/components/Container/styles.jsx","entrypoint/presenters/web/components/Container/Container.tsx","entrypoint/presenters/web/components/Modal/Modal.tsx","entrypoint/presenters/web/components/AccountDetail/styles.jsx","constants/vote_value.ts","constants/types.ts","application/usecases/news/list/NewsListUsecase.ts","application/usecases/news/get/NewsGetUsecase.ts","application/usecases/news/post/NewsPostUsecase.ts","application/usecases/news/listByAddress/NewsListByAddressUsecase.ts","application/usecases/news/withdraw/NewsWithdrawUsecase.ts","configuration/usecases/NewsService.ts","application/usecases/wallet/getConnector/WalletGetConnectorUsecase.ts","application/usecases/wallet/isInstall/WalletIsInstallUsecase.ts","configuration/usecases/WalletService.ts","application/usecases/blockchain/getUse/BlockchainGetUseUsecase.ts","application/usecases/blockchain/getAddress/BlockchainGetAddressUsecase.ts","application/usecases/blockchain/getLink/BlockchainGetUseUsecase.ts","application/usecases/blockchain/getBalanceOf/BlockchainGetBalanceOfUsecase.ts","configuration/usecases/BlockchainService.ts","application/usecases/topic/list/TopicListUsecase.ts","application/usecases/topic/subscribe/TopicSubscribeUsecase.ts","application/usecases/topic/listByAddress/TopicListByAddressUsecase.ts","configuration/usecases/TopicService.ts","application/usecases/vote/commit/VoteCommitUsecase.ts","application/usecases/vote/reveal/VoteRevealUsecase.ts","configuration/usecases/VoteService.ts","infraestructure/repositories/ErrorMapper.ts","infraestructure/repositories/news/IpfsMapper.ts","domain/models/News/News.ts","domain/models/News/NewsPreview.ts","domain/models/Topic/Topic.ts","domain/models/Vote/Vote.ts","infraestructure/repositories/news/NewsMapper.ts","infraestructure/repositories/news/NewsGraphRepository.ts","infraestructure/repositories/wallet/MetaMaskRepository.ts","infraestructure/repositories/wallet/WalletRepository.ts","domain/models/Chain/Chain.ts","infraestructure/repositories/blockchain/ChainMapper.ts","infraestructure/repositories/blockchain/LinkMapper.ts","infraestructure/repositories/blockchain/EthereumRepository.ts","infraestructure/repositories/topic/TopicMapper.ts","infraestructure/repositories/topic/TopicGraphRepository.ts","infraestructure/repositories/vote/VoteGraphRepository.ts","infraestructure/repositories/currency/DaiEthereumRepository.ts","inversify.config.ts","entrypoint/presenters/web/components/Icon/styles.jsx","entrypoint/presenters/web/components/Icon/Icon.tsx","domain/models/Pagination/Pagination.ts","entrypoint/presenters/web/components/AccountDetail/AccountDetail.tsx","assets/images/metamask.png","constants/supported_wallets.ts","entrypoint/presenters/web/components/Option/styles.jsx","entrypoint/presenters/web/components/Option/Options.tsx","entrypoint/presenters/web/hooks/usePrevious.ts","entrypoint/presenters/web/actions/allActions.ts","entrypoint/presenters/web/components/WalletModal/WalletModal.tsx","entrypoint/presenters/web/components/AccountStatus/styles.jsx","entrypoint/presenters/web/components/Translation/I18next.ts","entrypoint/presenters/web/components/Translation/styles.jsx","entrypoint/presenters/web/components/Translation/SelectLanguage.tsx","entrypoint/presenters/web/components/AccountStatus/AccountStatus.tsx","entrypoint/presenters/web/hooks/useAuthorization.ts","entrypoint/presenters/web/components/Wallet/Wallet.tsx","entrypoint/presenters/web/components/Header/Header.tsx","entrypoint/presenters/web/components/Layout/withLayout.tsx","entrypoint/presenters/web/components/Authorization/styles.jsx","entrypoint/presenters/web/components/Authorization/withAuthorization.tsx","entrypoint/presenters/web/components/NewsList/styles.jsx","entrypoint/presenters/web/components/NewsCard/styles.jsx","entrypoint/presenters/web/components/NewsCard/NewsCard.tsx","domain/models/Filter/NewsFilter.ts","entrypoint/presenters/web/components/NewsFilterBar/styles.jsx","entrypoint/presenters/web/components/NewsFilterBar/NewsFilterBar.tsx","entrypoint/presenters/web/hooks/useInifiniteScrolling.ts","entrypoint/presenters/web/components/NewsList/NewsList.tsx","entrypoint/presenters/web/components/NewsPage/styles.jsx","entrypoint/presenters/web/components/NewsRender/styles.jsx","entrypoint/presenters/web/components/NewsRender/NewsRender.tsx","entrypoint/presenters/web/components/Votation/styles.jsx","entrypoint/presenters/web/components/Votation/Votation.tsx","entrypoint/presenters/web/components/NewsPage/NewsPage.tsx","entrypoint/presenters/web/components/NewsForm/styles.jsx","entrypoint/presenters/web/components/SelectTopic/styles.jsx","entrypoint/presenters/web/components/SelectTopic/SelectTopic.tsx","entrypoint/presenters/web/components/LockInfo/styles.jsx","constants/supported_currency.ts","entrypoint/presenters/web/components/LockInfo/LockInfo.tsx","entrypoint/presenters/web/components/NewsForm/NewsForm.tsx","entrypoint/presenters/web/components/JuryForm/styles.jsx","entrypoint/presenters/web/components/JuryForm/JuryForm.tsx","entrypoint/presenters/web/components/VoteForm/styles.jsx","entrypoint/presenters/web/components/VoteForm/VoteForm.tsx","entrypoint/presenters/web/App.tsx","index.tsx"],"names":["primary","secondary","success","info","warning","lightenRate","theme","createMuiTheme","palette","main","light","tinycolor","lighten","toHexString","dark","darken","contrastText","status","pending","false","true","text","hint","background","default","customShadows","widget","widgetDark","widgetWide","overrides","MuiBackdrop","root","backgroundColor","MuiMenu","paper","boxShadow","MuiSelect","icon","color","MuiListItem","button","MuiTouchRipple","child","MuiTableRow","height","MuiTableCell","borderBottom","head","fontSize","body","typography","margin","padding","fontFamily","join","h1","h2","h3","h4","h5","h6","body2","TYPES","walletActions","setWallet","wallet","type","notificationReducer","state","undefined","action","rootReducers","combineReducers","walletReducer","store","createStore","makeStyles","container","justifyContent","alignItems","flexDirection","position","width","display","top","left","logo","marginBottom","spacing","breakpoints","down","typografyContainer","marginLeft","brandName","letterSpacing","fontWeight","paddingTop","paddingBottom","paddingLeft","paddingRight","maxWidth","textAlign","error","redirect","backButton","textTransform","URLS","home","process","news","newsForm","juryForm","voteForm","revealForm","Error","code","t","useTranslation","classes","useStyles","Grid","className","item","Typography","variant","Paper","classnames","Button","component","Link","to","size","overflowX","extendToolbar","mixins","toolbar","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","logotype","marginRight","whiteSpace","image","rowContainer","minWidth","borderContainer","border","borderRadius","rightContainer","leftContainer","errorContainer","errorText","modal","titleRow","float","iconButton","Container","onClick","onClickTitle","title","titleVariant","children","style","IconButton","CustomModal","isOpen","onClose","Modal","open","VOTE_VALUE","spaceBetween","start","columnContainer","colorContainer","borderBottomLeftRadius","borderBottomRightRadius","newLine","textAccount","textDecoration","buttonChange","INewsRepository","Symbol","for","NewsService","IBlockchainRepository","BlockchainService","IWalletRepository","WalletService","ITopicRepository","TopicService","IVoteRepository","VoteService","IEthRepository","IDaiRepository","IGazzethRepository","NewsListUsecase","newsRepository","this","pagination","filter","list","NewsGetUsecase","id","get","NewsPostUsecase","daiRepository","library","getBalanceOf","topic","costPublish","post","NewsListByAddressUsecase","address","listByAddress","NewsWithdrawUsecase","withdraw","injectable","inject","WalletGetConnectorUsecase","walletRepository","getConnector","WalletIsInstallUsecase","isInstall","BlockchainGetUseUsecase","blockchainRepository","getUse","getUseActive","BlockchainGetAddressUsecase","chars","parsed","isAddress","substring","value","getAddress","BlockchainGetLinkUsecase","chainId","data","getLink","BlockchainGetBalanceOfUsecase","ethRepository","gazzethRepository","currencyRepositories","push","currency","TopicListUsecase","topicRepository","TopicSubscribeUsecase","topics","total","forEach","quantity","costJury","arrayOfPromise","subscribe","Promise","all","TopicListByAddressUsecase","VoteCommitUsecase","voteRepository","vote","commit","VoteRevealUsecase","reveal","ErrorMapper","e","newMessage","messageParse","message","match","length","console","log","IpfsMapper","dto","toBuffer","buffer","TextDecoder","decode","VOTE_VALUES","None","True","False","Unqualified","News","content","verified","votes","publishDate","voteCounter","Date","now","commitPhaseDuration","revealPhaseDuration","NewsPreview","lede","Topic","name","Vote","publicationId","justification","penalized","NewsMapper","parts","file","winningVote","voting","parseInt","toEntityVoteValue","toEntityTopic","voteCounters","map","v","toEntityVote","withdrawn","vc","juror","parseFloat","ethers","utils","formatUnits","priceToBeJuror","priceToPublish","queries","NewsGraphRepository","ipfsClient","IpfsHttpClient","host","IPFS_URL","port","IPFS_PORT","protocol","IPFS_PROTOCOL","toQuery","options","method","JSON","stringify","query","offset","limit","variables","headers","fetch","API_URL","json","result","flatMap","votings","publication","resultWithFile","i","element","toEntity","cat","hash","toEntityPreview","toLocaleLowerCase","jurors","m","toString","publications","add","pin","path","contract","Contract","PROTOCOL_CONTRACT_ADDRESS","Protocol","getSigner","listAccounts","senders","signDaiPermit","window","ethereum","DAI_CONTRACT_ADDRESS","publish","nonce","expiry","r","s","tx","wait","withdrawRewards","MetaMaskRepository","web3","InjectedConnector","supportedChainIds","WalletRepository","walletsRepository","Map","Chain","ChainMapper","LinkMapper","mapType","prefix","EthereumRepository","useWeb3React","active","account","connector","activate","context","contextNetwork","TopicMapper","TopicGraphRepository","subscriptions","times","subscribeAsJuror","VoteGraphRepository","sender","getCommitmentNonce","_hex","signVote","encode","defaultAbiCoder","commitment","keccak256","commitVote","commitmentNonce","revealVote","getDomain","provider","contractAddress","a","getChainId","domain","version","verifyingContract","EIP712Domain","createTypedVoteData","types","primaryType","typedData","signData","sig","DaiEthereumRepository","Dai","balanceOf","then","bind","metamask","Icon","useSelector","MetamaskIcon","ref","useRef","useEffect","current","innerHTML","appendChild","Jazzicon","slice","Pagination","page","changePage","getCurrentPage","blockchainService","newsService","AccountDetail","onChange","getBlockchainGetUseUseCase","useActiveBlockchain","chain","useState","setNews","getNewsListByAddressUsecase","newsListResponce","catch","getUrl","n","isCommitOver","isRevealOver","getMessage","getBlockchainGetAddressUsecase","shortenAddress","navigator","clipboard","writeText","link","getBlockchainGetLinkUsecase","replace","SUPPORTED_WALLETS","METAMASK","installLink","buttonActive","disabled","iconContainer","textContainer","Options","header","subHeader","clsx","src","alt","usePrevious","allActions","walletService","WalletModal","onOpen","useBlockchain","dispatch","useDispatch","setState","previousAccount","previousIsOpen","previousError","onCloseWrapper","tryActivate","option","getWalletGetConnectorUseCase","getError","getErrorTryAgain","Box","Object","keys","key","getWalletIsInstallUseCase","UnsupportedChainIdError","CircularProgress","white","connectButton","flex","overflow","textOverflow","languages","i18n","use","Backend","LanguageDetector","initReactI18next","init","backend","loadPath","fallbackLng","debug","supportedLngs","interpolation","escapeValue","buttonOption","SelectLanguage","isModalOpen","setIsModalOpen","language","l","changeLanguage","AccountStatus","useAuthorization","isAuthorized","loading","setLoading","finally","Wallet","Header","AppBar","Toolbar","withLayout","Component","rowContiner","columnContiner","withAuthorization","gridContainer","justify","marginTop","statusBarIcon","statusBar","falseStatusBar","pendingStatusBar","trueStatusBar","unqualifiedStatusBar","NewsCard","props","shortLede","setLede","Card","CardActionArea","CardMedia","getStatusBar","CardContent","gutterBottom","CardActions","NewsFilter","formControl","topicService","NewsFilterBar","setTopics","getTopicListUseCase","fixed","FormControl","InputLabel","Select","native","label","event","target","setVerified","aria-label","voteValue","setTopic","useInfiniteScrolling","getPage","pageSize","newsList","setNewList","pageState","setPageState","defaultPagination","p","handleScroll","innerHeight","scrollY","document","offsetHeight","newPagination","advancePage","addEventListener","removeEventListener","f","NewsList","handleNewList","getNewsListUseCase","Filter","setFilter","xs","direction","containerSpinner","minHeight","spinner","NewsRender","renderers","remarkPlugins","gfm","components","img","buttonProgress","Votation","getState","series","isFound","serie","seriesSorted","sort","n1","n2","colors","getColor","chart","stacked","stackType","plotOptions","bar","horizontal","stroke","xaxis","floating","axisTicks","show","axisBorder","labels","yaxis","tooltip","enabled","y","x","fill","opacity","legend","showForSingleSeries","horizontalAlign","offsetX","onItemClick","toggleDataSeries","React","getNewsWithdrawUsecase","toast","NewsPage","useParams","idNumber","Number","isNaN","getNewsGetUseCase","newsResponce","backColor","getStatusMessage","buttonPublish","buttonSelected","SelectTopic","selectedOption","SUPPORTED_CURRENCY","columnEnd","columnStart","containerBorder","LockInfo","lockCost","balance","setBalance","getBlockchainGetBalanceOfUsecase","NewsForm","preRender","setPreRender","fileName","setFileName","accept","files","htmlFor","FormControlLabel","control","Checkbox","checked","getNewsPostUseCase","buttonRegistry","JuryForm","currentTopic","setCurrentTopic","currentQuantity","setCurrentQuantity","suscribeTopics","setSuscribeTopics","selectedTopics","setSelectedTopics","errorMenssage","setErorMenssage","cost","setCost","getTopicListByAddressUseCase","TextField","InputProps","inputComponent","NumberFormatCustom","c","newTopics","splice","getTopicSubscribeUsecase","inputRef","other","getInputRef","onValueChange","values","thousandSeparator","buttonPublication","rowRuleContainer","ruleLabel","voteService","VoteForm","isReveal","setVoteValue","setJustification","multiline","rows","getVoteRevealUsecase","getVoteCommitUseCase","App","exact","toastClassName","getLibrary","Web3Provider","pollingInterval","Web3ProviderNetwork","createWeb3ReactRoot","ReactDOM","render","fallback","ThemeProvider","Themes","CssBaseline","getElementById"],"mappings":"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","file":"static/js/main.ddf07625.chunk.js","sourcesContent":["import { createMuiTheme } from '@material-ui/core/styles';\nimport tinycolor from \"tinycolor2\";\n\nconst primary = \"#061459\";\nconst secondary = \"#ffffff\";\nconst success = \"#3CD4A0\";\nconst info = \"#9013FE\";\nconst warning = \"#FFC260\";\n\nconst red = \"#ba1833\";\nconst green = \"#10913d\";\nconst grey = \"#7d7968\";\n\nconst darkenRate = 15;\nconst lightenRate = 7.5;\n\nconst theme = (createMuiTheme)({ //TODO check\n    palette: {\n        primary: {\n            main: primary,\n            light: tinycolor(primary)\n                .lighten(lightenRate)\n                .toHexString(),\n            dark: tinycolor(primary)\n                .darken(darkenRate)\n                .toHexString(),\n        },\n        secondary: {\n            main: secondary,\n            light: tinycolor(secondary)\n                .lighten(lightenRate)\n                .toHexString(),\n            dark: tinycolor(secondary)\n                .darken(darkenRate)\n                .toHexString(),\n            contrastText: \"#FFFFFF\",\n        },\n        status: {\n            pending: grey,\n            false: red,\n            true: green\n        },\n        warning: {\n            main: warning,\n            light: tinycolor(warning)\n                .lighten(lightenRate)\n                .toHexString(),\n            dark: tinycolor(warning)\n                .darken(darkenRate)\n                .toHexString(),\n        },\n        success: {\n            main: success,\n            light: tinycolor(success)\n                .lighten(lightenRate)\n                .toHexString(),\n            dark: tinycolor(success)\n                .darken(darkenRate)\n                .toHexString(),\n        },\n        info: {\n            main: info,\n            light: tinycolor(info)\n                .lighten(lightenRate)\n                .toHexString(),\n            dark: tinycolor(info)\n                .darken(darkenRate)\n                .toHexString(),\n        },\n        text: {\n            primary: \"#4A4A4A\",\n            secondary: \"#6E6E6E\",\n            hint: \"#000000\",\n        },\n        background: {\n            default: \"#F6F7FF\",\n            light: \"#F3F5FF\",\n        },\n    },\n    customShadows: {\n        widget:\n            \"0px 3px 11px 0px #E8EAFC, 0 3px 3px -2px #B2B2B21A, 0 1px 8px 0 #9A9A9A1A\",\n        widgetDark:\n            \"0px 3px 18px 0px #4558A3B3, 0 3px 3px -2px #B2B2B21A, 0 1px 8px 0 #9A9A9A1A\",\n        widgetWide:\n            \"0px 12px 33px 0px #E8EAFC, 0 3px 3px -2px #B2B2B21A, 0 1px 8px 0 #9A9A9A1A\",\n    },\n    overrides: {\n        MuiBackdrop: {\n            root: {\n                backgroundColor: \"#4A4A4A1A\",\n            },\n        },\n        MuiMenu: {\n            paper: {\n                boxShadow:\n                    \"0px 3px 11px 0px #E8EAFC, 0 3px 3px -2px #B2B2B21A, 0 1px 8px 0 #9A9A9A1A\",\n            },\n        },\n        MuiSelect: {\n            icon: {\n                color: \"#B9B9B9\",\n            },\n        },\n        MuiListItem: {\n            root: {\n                \"&$selected\": {\n                    backgroundColor: \"#F3F5FF !important\",\n                    \"&:focus\": {\n                        backgroundColor: \"#F3F5FF\",\n                    },\n                },\n            },\n            button: {\n                \"&:hover, &:focus\": {\n                    backgroundColor: \"#F3F5FF\",\n                },\n            },\n        },\n        MuiTouchRipple: {\n            child: {\n                backgroundColor: \"white\",\n            },\n        },\n        MuiTableRow: {\n            root: {\n                height: 56,\n            },\n        },\n        MuiTableCell: {\n            root: {\n                borderBottom: \"1px solid rgba(224, 224, 224, .5)\",\n            },\n            head: {\n                fontSize: \"0.95rem\",\n            },\n            body: {\n                fontSize: \"0.95rem\",\n            },\n        },\n    },\n    typography: {\n        margin: 0,\n        padding: 0,\n        fontFamily: [\n            'Lato',\n            'sans-serif',\n        ].join(','),\n\n        h1: {\n            fontSize: \"3rem\",\n        },\n        h2: {\n            fontSize: \"2rem\",\n        },\n        h3: {\n            fontSize: \"1.64rem\",\n        },\n        h4: {\n            fontSize: \"1.5rem\",\n        },\n        h5: {\n            fontSize: \"1.285rem\",\n        },\n        h6: {\n            fontSize: \"1.142rem\",\n        },\n        body2: {\n            fontSize: \"1rem\",\n        },\n    },\n});\n\nexport default theme;\n","import { walletInfo } from \"@constants/supported_wallets\"\n\nexport const TYPES = {\n    SET_WALLET: \"SET_WALLET\"\n}\n\nconst setWallet = (wallet: walletInfo) => {\n    return {\n        type: TYPES.SET_WALLET,\n        wallet: wallet\n    }\n}\n\nconst walletActions = { setWallet }\n\nexport default walletActions\n","import { walletInfo } from '@constants/supported_wallets';\nimport { TYPES } from '@entrypoint/presenters/web/actions/walletActions';\n\nexport type WalletState = {\n    wallet?: walletInfo\n}\n\ntype Action = {\n    type: string,\n    wallet: walletInfo\n}\n\nconst notificationReducer = (state: WalletState  = { wallet: undefined }, action: Action) => {\n    switch (action.type) {\n        case TYPES.SET_WALLET:\n            return { ...state, wallet: action.wallet }\n        default:\n            return state\n    }\n}\n\nexport default notificationReducer\n","import { combineReducers } from 'redux';\nimport walletReducer, { WalletState } from \"@entrypoint/presenters/web/reducers/walletReducer\";\n\nexport type RootState = {\n    wallet: WalletState\n}\n\nconst rootReducers = combineReducers({\n    wallet: walletReducer\n});\n\nexport default rootReducers;\n","\nimport { createStore } from \"redux\";\nimport rootReducers from \"@entrypoint/presenters/web/reducers/allReducers\";\n\nconst store = createStore(\n    rootReducers,\n);\n\nexport default store;\n","import { makeStyles } from \"@material-ui/styles\";\n\nexport default makeStyles(theme => ({\n  container: {\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    flexDirection: \"column\",\n    backgroundColor: theme.palette.primary.main,\n    position: \"absolute\",\n    height: \"100vh\",\n    width: \"100vw\",\n    display: \"flex\",\n    top: 0,\n    left: 0,\n  },  \n  logo: {\n    marginBottom: theme.spacing(12),\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    display: \"flex\",\n    [theme.breakpoints.down(\"sm\")]: {\n      display: \"none\",\n    },\n  },  \n  typografyContainer: {\n    marginLeft: 20,\n    display: 'flex',\n  },\n  brandName: {\n    letterSpacing: '-0.19rem',\n    color: \"#ffffff\",\n    fontSize: 84,\n    fontWeight: 800,\n    [theme.breakpoints.down(\"md\")]: {\n      fontSize: 48,\n    },\n  },\n  paper: {\n    boxShadow: theme.customShadows.widgetDark,\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8),\n    paddingLeft: theme.spacing(6),\n    paddingRight: theme.spacing(6),\n    maxWidth: 404,\n    display: \"flex\",\n    alignItems: \"center\",\n    flexDirection: \"column\",\n  },\n  text: {\n    textAlign: \"center\",\n    marginBottom: theme.spacing(10),\n  },\n  error: {\n    fontWeight: 600,\n    fontSize: 148,\n  },\n  redirect: {\n    color: theme.palette.text.hint,\n    fontWeight: 300,\n  },\n  backButton: {\n    fontSize: 22,\n    boxShadow: theme.customShadows.widget,\n    textTransform: \"none\",\n  },\n}));\n","export const URLS = {\n    home: process.env.REACT_APP_PUBLIC_URL + \"/\",\n    news: process.env.REACT_APP_PUBLIC_URL + \"/n/:id\",\n    newsForm: process.env.REACT_APP_PUBLIC_URL + \"/n/create\",\n    juryForm: process.env.REACT_APP_PUBLIC_URL + \"/j/add\",\n    voteForm: process.env.REACT_APP_PUBLIC_URL + \"/v/:id\",\n    revealForm: process.env.REACT_APP_PUBLIC_URL + \"/r/:id\",\n}\n","\nimport React from \"react\";\nimport { useTranslation } from 'react-i18next';\nimport { Grid, Paper, Typography, Button } from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\nimport classnames from \"classnames\";\nimport useStyles from \"./styles\";\nimport { URLS } from \"@constants/urls\";\n\ntype Props = {\n    code: string\n}\n\nexport default function Error({ code }: Props) {\n    const { t } = useTranslation();\n\n    var classes = useStyles();\n\n    return (\n        <Grid container className={classes.container}>\n            <Grid item>\n                <div className={classes.logo}>\n                    <div className={classes.typografyContainer}>\n                        <Typography variant=\"h4\" className={classes.brandName}>Gazzeth</Typography>\n                    </div>\n                </div>\n            </Grid>\n            <Grid item>\n                <Paper classes={{ root: classes.paper }}>\n                    <Typography variant=\"h1\" color=\"primary\" className={classnames(classes.text, classes.error)}>\n                        {code}\n                    </Typography>\n                    <Typography variant=\"h5\" color=\"primary\" className={classes.text}>\n                        {t(code)}\n                    </Typography>\n                    <Typography variant=\"h6\" color=\"primary\" className={classnames(classes.text, classes.redirect)}>\n                        {t(\"back-message\")}\n                    </Typography>\n                    <Button variant=\"contained\" color=\"primary\" component={Link} to={URLS.home} size=\"large\" className={classes.backButton}>\n                        {t(\"home\")}\n                    </Button>\n                </Paper>\n            </Grid>\n        </Grid>\n    );\n}","import { makeStyles } from \"@material-ui/styles\";\n\nexport default makeStyles(theme => ({\n    root: {\n        maxWidth: \"100vw\",\n        display: \"flex\",\n        overflowX: \"hidden\",\n    },\n    extendToolbar: {\n        ...theme.mixins.toolbar,\n    },\n}));\n","import { makeStyles } from \"@material-ui/styles\";\n\nexport default makeStyles(theme => ({\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create([\"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  toolbar: {\n    justifyContent: 'space-between',\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2),\n    display: 'flex',\n  },\n  logo: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    display: 'flex',\n    justifyContent: 'center',\n  },\n  logotype: {\n    color: \"white\",\n    fontSize: 18,\n    fontWeight: 500,\n    marginRight: theme.spacing(2.5),\n    marginLeft: theme.spacing(2.5),\n    whiteSpace: \"nowrap\",\n    [theme.breakpoints.down(\"xs\")]: {\n      display: \"none\",\n    },\n  },\n  button: {\n    textTransform: \"none\",\n  },\n  image: {\n    height: \"50px\",\n    width: \"50px\",\n    marginRight: \"0.5rem\"\n},\n}));\n","import { makeStyles } from \"@material-ui/styles\";\n\nexport default makeStyles(theme => ({\n    rowContainer: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        minWidth: 400,\n        justifyContent: \"left\",\n        padding: \"1.1rem\"\n    },\n    borderContainer: {\n        backgroundColor: \"#FFFFFF\",\n        border: `1px solid #ced0d9`,\n        borderRadius: 20,\n    },\n    rightContainer: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        alignItems: \"flex-start\",\n        paddingLeft: \"1rem\"\n    },\n    leftContainer: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        alignItems: \"flex-start\",\n    },\n    errorContainer: {\n        border: `1px solid #fd4040`,\n    },\n    errorText: {\n        color: \"#fd4040\"\n    },\n    button: {\n        textTransform: \"none\",\n        backgroundColor: \"#888d9b\",\n        color: \"#000000\",\n        borderRadius: 10,\n        \"&:hover\": {\n            backgroundColor: \"#a8abb3\"\n        }\n    },\n}));\n","import { makeStyles } from \"@material-ui/styles\";\n\nexport default makeStyles(theme => ({\n    modal: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n}));\n","import { makeStyles } from \"@material-ui/styles\";\n\nexport default makeStyles(theme => ({\n    paper: {\n        boxShadow: theme.customShadows.widgetDark,\n        display: \"flex\",\n        alignItems: \"center\",\n        flexDirection: \"column\",\n        borderRadius: 20,\n        maxWidth: \"1000px\"\n    },\n    titleRow: {\n        justifyContent: 'space-between',\n        display: 'flex',\n        width: \"100%\",\n        padding: \"1rem\",\n    },\n    button: {\n        textTransform: \"none\",\n        float: \"left\",\n        padding: \"0\",\n        justifyContent: \"flex-start\",\n        '&:hover': {},\n    },\n    iconButton: {\n        float: \"right\",\n        padding: \"0\",\n    }\n}));","import React from \"react\";\nimport useStyles from \"./styles\";\nimport { Button, IconButton, Paper, Typography } from \"@material-ui/core\";\n\ntype Props = {\n    onClick?: () => void,\n    onClickTitle?: () => void,\n    title?: string,\n    icon?: React.ReactNode,\n    titleVariant?: (\"h1\" | \"h2\" | \"h3\" | \"h4\" | \"h5\" | \"h6\"),\n    children: React.ReactNode\n}\n\nexport default function Container({ onClick, onClickTitle, title, icon, titleVariant, children }: Props) {\n\n    const classes = useStyles();\n\n    return (\n        <Paper className={classes.paper} style={{minWidth: \"700px\"}}>\n            <div className={classes.titleRow}>\n                <Button className={classes.button} onClick={onClickTitle}>\n                    <Typography variant={titleVariant ? titleVariant : \"h5\"}>{title}</Typography>\n                </Button>\n                {icon &&\n                    <IconButton className={classes.iconButton} onClick={onClick}>\n                        {icon}\n                    </IconButton>\n                }\n            </div>\n            <div>\n                {children}\n            </div>\n        </Paper>\n    )\n}\n","import React from \"react\";\nimport useStyles from \"./styles\";\nimport { Modal } from \"@material-ui/core\";\nimport CloseIcon from '@material-ui/icons/Close';\nimport Container from \"../Container/Container\";\n\ntype Props = {\n    isOpen: boolean,\n    onClose: () => void,\n    onClickTitle?: () => void,\n    title?: string,\n    children: React.ReactNode\n}\n\nexport default function CustomModal({ isOpen, onClose, onClickTitle, title, children }: Props) {\n\n    const classes = useStyles();\n\n    return (\n        <Modal\n            className={classes.modal}\n            open={isOpen}\n            onClose={onClose}>\n                <Container onClick={onClose} onClickTitle={onClickTitle} title={title} icon={<CloseIcon />}>\n                    {children}\n                </Container>\n        </Modal>\n    )\n}","import { makeStyles } from \"@material-ui/styles\";\n\nexport default makeStyles(theme => ({\n    rowContainer: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        minWidth: 400,\n        justifyContent: \"left\",\n        padding: \"1.1rem\"\n    },\n    spaceBetween: {\n        justifyContent: \"space-between\",\n        padding: \"0rem\"\n    },\n    start: {\n        justifyContent: \"flex-start\",\n        padding: \"0rem\"\n    },\n    columnContainer: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        minWidth: 400,\n        padding: \"1.1rem\",\n    },\n    borderContainer: {\n        marginBottom: \"1rem\",\n        marginLeft: \"1rem\",\n        marginRight: \"1rem\",\n        backgroundColor: \"#FFFFFF\",\n        border: `1px solid #ced0d9`,\n        borderRadius: 20,\n    },\n    colorContainer: {\n        backgroundColor: \"#edeef2\",\n        borderBottomLeftRadius: 20,\n        borderBottomRightRadius: 20,      \n    },\n    rightContainer: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        alignItems: \"flex-start\",\n        paddingLeft: \"1rem\"\n    },\n    newLine: {\n        marginBottom: \"1rem\",  \n    },\n    leftContainer: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        alignItems: \"flex-start\",\n    },\n    text: {\n        color: \"#888d9b\"\n    },\n    textAccount: {\n        color: \"#000000\",\n    },\n    button: {\n        textTransform: \"none\",\n        backgroundColor: \"none\",\n        color: \"#000000\",\n        borderRadius: 10,\n        \"&:hover\": {\n            backgroundColor: \"none\",\n            textDecoration: \"underline\"\n        }\n    },\n    buttonChange: {\n        textTransform: \"none\",\n        color: theme.palette.primary.main,\n        borderRadius: 20,\n        border: `1px solid ${theme.palette.primary.main}`,\n        \"&:hover\": {\n            backgroundColor: \"none\",\n            textDecoration: \"underline\"\n        }\n    }\n}));\n","export enum VOTE_VALUE {\n    None,\n    True,\n    False,\n    Unqualified\n}\n\nconst VOTE_VALUES: VOTE_VALUE[] = [VOTE_VALUE.None, VOTE_VALUE.True, VOTE_VALUE.False, VOTE_VALUE.Unqualified];\n\nexport { VOTE_VALUES }","export const TYPES = {\n    INewsRepository: Symbol.for(\"INewsRepository\"),\n    NewsService: Symbol.for(\"NewsService\"),\n    IBlockchainRepository: Symbol.for(\"IBlockchainRepository\"),\n    BlockchainService: Symbol.for(\"BlockchainService\"),    \n    IWalletRepository: Symbol.for(\"IWalletRepository\"),\n    WalletService: Symbol.for(\"WalletService\"),\n    ITopicRepository: Symbol.for(\"ITopicRepository\"),\n    TopicService: Symbol.for(\"TopicService\"),\n    IVoteRepository: Symbol.for(\"IVoteRepository\"),\n    VoteService: Symbol.for(\"VoteService\"),\n    IEthRepository: Symbol.for(\"IEthRepository\"),\n    IDaiRepository: Symbol.for(\"IDaiRepository\"),\n    IGazzethRepository: Symbol.for(\"IGazzethRepository\"),\n}\n","import INewsRepository from \"@application/repositories/INewsRepository\";\nimport Filter from \"@domain/models/Filter/NewsFilter\";\nimport NewsPreview from \"@domain/models/News/NewsPreview\";\nimport Pagination from \"@domain/models/Pagination/Pagination\";\nimport INewsListUsecase from \"./INewsListUsecase\";\n\nexport default class NewsListUsecase implements INewsListUsecase{\n\n    private newsRepository: INewsRepository;\n\n    constructor(newsRepository: INewsRepository) {\n        this.newsRepository = newsRepository;\n    }\n    \n    public async list(pagination: Pagination, filter: Filter): Promise<NewsPreview[]> {\n        return this.newsRepository.list(pagination, filter);\n    }\n}\n","import INewsRepository from \"@application/repositories/INewsRepository\";\nimport News from \"@domain/models/News/News\";\nimport INewsGetUsecase from \"./INewsGetUsecase\";\n\nexport default class NewsGetUsecase implements INewsGetUsecase{\n\n    private newsRepository: INewsRepository;\n\n    constructor(newsRepository: INewsRepository) {\n        this.newsRepository = newsRepository;\n    }\n    \n    public async get(id: number): Promise<News> {\n        return this.newsRepository.get(id);\n    }\n}\n","import INewsRepository from \"@application/repositories/INewsRepository\";\nimport News from \"@domain/models/News/News\";\nimport INewsPostUsecase from \"./INewsPostUsecase\";\nimport { Web3Provider } from '@ethersproject/providers'\nimport ICurrencyRepository from \"@application/repositories/ICurrencyRepository\";\n\nexport default class NewsPostUsecase implements INewsPostUsecase {\n\n    private newsRepository: INewsRepository;\n    private daiRepository: ICurrencyRepository;\n\n    constructor(newsRepository: INewsRepository, daiRepository: ICurrencyRepository) {\n        this.newsRepository = newsRepository;\n        this.daiRepository = daiRepository;\n    }\n    \n    public async post(news: News, library: Web3Provider): Promise<void> {    \n        const balance = await this.daiRepository.getBalanceOf(library)\n\n        if (balance < news.topic.costPublish) {\n            throw new Error(\"insuficient-funds-error\")\n        }\n\n        return this.newsRepository.post(news, library);\n    }\n}\n","import INewsRepository from \"@application/repositories/INewsRepository\";\nimport NewsPreview from \"@domain/models/News/NewsPreview\";\nimport Pagination from \"@domain/models/Pagination/Pagination\";\nimport INewsListByAddressUsecase from \"./INewsListByAddressUsecase\";\n\nexport default class NewsListByAddressUsecase implements INewsListByAddressUsecase {\n\n    private newsRepository: INewsRepository;\n\n    constructor(newsRepository: INewsRepository) {\n        this.newsRepository = newsRepository;\n    }\n    \n    public async listByAddress(pagination: Pagination, address: string): Promise<NewsPreview[]> {\n        return this.newsRepository.listByAddress(pagination, address);\n    }\n}\n","import INewsRepository from \"@application/repositories/INewsRepository\";\nimport INewsWithdrawUsecase from \"./INewsWithdrawUsecase\";\nimport { Web3Provider } from '@ethersproject/providers'\n\nexport default class NewsWithdrawUsecase implements INewsWithdrawUsecase {\n\n    private newsRepository: INewsRepository;\n\n    constructor(newsRepository: INewsRepository) {\n        this.newsRepository = newsRepository;\n    }\n    \n    public async withdraw(id: number, library: Web3Provider): Promise<void> {\n        return this.newsRepository.withdraw(id, library);\n    }\n}\n","import { injectable, inject } from \"inversify\"\nimport { TYPES } from '@constants/types';\nimport INewsRepository from \"@application/repositories/INewsRepository\";\nimport NewsListUsecase from \"@application/usecases/news/list/NewsListUsecase\";\nimport NewsGetUsecase from \"@application/usecases/news/get/NewsGetUsecase\";\nimport NewsPostUsecase from \"@application/usecases/news/post/NewsPostUsecase\";\nimport ICurrencyRepository from \"@application/repositories/ICurrencyRepository\";\nimport NewsListByAddressUsecase from \"@application/usecases/news/listByAddress/NewsListByAddressUsecase\";\nimport NewsWithdrawUsecase from \"@application/usecases/news/withdraw/NewsWithdrawUsecase\";\n\n@injectable()\nexport default class NewsService {\n    @inject(TYPES.INewsRepository) private newsRepository: INewsRepository;\n    @inject(TYPES.IDaiRepository) private daiRepository: ICurrencyRepository;\n\n    public getNewsListUseCase() {\n        return new NewsListUsecase(this.newsRepository);\n    }\n\n    public getNewsGetUseCase() {\n        return new NewsGetUsecase(this.newsRepository);\n    }\n\n    public getNewsPostUseCase() {\n        return new NewsPostUsecase(this.newsRepository, this.daiRepository);\n    }\n\n    public getNewsListByAddressUsecase() {\n        return new NewsListByAddressUsecase(this.newsRepository);\n    }\n\n    public getNewsWithdrawUsecase() {\n        return new NewsWithdrawUsecase(this.newsRepository);\n    }\n}\n","import IWalletGetConnectorUsecase from \"./IWalletGetConnectorUsecase\";\nimport { AbstractConnector } from '@web3-react/abstract-connector'\nimport { walletType } from \"@constants/supported_wallets\";\nimport IWalletRepository from \"@application/repositories/IWalletRepository\";\n\nexport default class WalletGetConnectorUsecase implements IWalletGetConnectorUsecase{\n\n    private walletRepository: IWalletRepository;\n\n    constructor(walletRepository: IWalletRepository) {\n        this.walletRepository = walletRepository;\n    }\n    \n    public getConnector(wallet: walletType): AbstractConnector {\n        return this.walletRepository.getConnector(wallet);\n    }\n}\n","import IWalletRepository from \"@application/repositories/IWalletRepository\";\nimport IWalletIsInstallUsecase from \"./IWalletIsInstallUsecase\";\nimport { walletType } from \"@constants/supported_wallets\";\n\nexport default class WalletIsInstallUsecase implements IWalletIsInstallUsecase {\n\n    private walletRepository: IWalletRepository;\n\n    constructor(walletRepository: IWalletRepository) {\n        this.walletRepository = walletRepository;\n    }\n    \n    public isInstall(wallet: walletType): boolean {\n        return this.walletRepository.isInstall(wallet);\n    }\n}\n","import { injectable, inject } from \"inversify\"\nimport { TYPES } from '@constants/types';\nimport IWalletRepository from \"@application/repositories/IWalletRepository\";\nimport WalletGetConnectorUsecase from \"@application/usecases/wallet/getConnector/WalletGetConnectorUsecase\";\nimport WalletIsInstallUsecase from \"@application/usecases/wallet/isInstall/WalletIsInstallUsecase\";\n\n@injectable()\nexport default class WalletService {\n    @inject(TYPES.IWalletRepository) private walletRepository: IWalletRepository;\n\n    public getWalletGetConnectorUseCase() {\n        return new WalletGetConnectorUsecase(this.walletRepository);\n    }\n\n    public getWalletIsInstallUseCase() {\n        return new WalletIsInstallUsecase(this.walletRepository);\n    }\n}\n","import IBlockchainGetUseUsecase from \"./IBlockchainGetUseUsecase\";\nimport IBlockchainRepository, { IUseActiveBlockchain, IUseBlockchain } from '@application/repositories/IBlockchainRepository';\n\nexport default class BlockchainGetUseUsecase implements IBlockchainGetUseUsecase {\n\n    private blockchainRepository: IBlockchainRepository;\n\n    constructor(blockchainRepository: IBlockchainRepository) {\n        this.blockchainRepository = blockchainRepository;\n    }\n    \n    public getUse(): IUseBlockchain {\n        return this.blockchainRepository.getUse()\n    }\n\n    public getUseActive(): IUseActiveBlockchain {\n        return this.blockchainRepository.getUseActive()\n    }\n}\n","import IBlockchainGetAddressUsecase from \"./IBlockchainGetAddressUsecase\";\nimport { getAddress } from '@ethersproject/address'\n\nexport default class BlockchainGetAddressUsecase implements IBlockchainGetAddressUsecase {\n\n    public shortenAddress(address: string, chars: number = 4): string {\n        const parsed = this.isAddress(address)\n        if (!parsed) {\n            throw Error(`Invalid 'address' parameter '${address}'.`)\n        }\n        return `${parsed.substring(0, chars + 2)}...${parsed.substring(42 - chars)}`\n    }\n\n    public isAddress(value: any): string | false {\n        try {\n            return getAddress(value)\n        } catch {\n            return false\n        }\n    }\n}\n","import IBlockchainGetLinkUsecase from \"./IBlockchainGetLinkUsecase\";\nimport IBlockchainRepository, { LinkType } from '@application/repositories/IBlockchainRepository';\n\nexport default class BlockchainGetLinkUsecase implements IBlockchainGetLinkUsecase {\n\n    private blockchainRepository: IBlockchainRepository;\n\n    constructor(blockchainRepository: IBlockchainRepository) {\n        this.blockchainRepository = blockchainRepository;\n    }\n    \n    public getLink(chainId: number, data: string, type: LinkType): string {\n        return this.blockchainRepository.getLink(chainId, data, type);\n    }\n}\n","import IBlockchainGetBalanceOfUsecase from \"./IBlockchainGetBalanceOfUsecase\";\nimport { SUPPORTED_CURRENCY } from '@constants/supported_currency';\nimport { Web3Provider } from '@ethersproject/providers'\nimport ICurrencyRepository from \"@application/repositories/ICurrencyRepository\";\n\nexport default class BlockchainGetBalanceOfUsecase implements IBlockchainGetBalanceOfUsecase {\n\n    private currencyRepositories: ICurrencyRepository[];\n\n    constructor(ethRepository: ICurrencyRepository, daiRepository: ICurrencyRepository, gazzethRepository: ICurrencyRepository) {\n        this.currencyRepositories = [];\n        this.currencyRepositories.push(ethRepository);\n        this.currencyRepositories.push(daiRepository)\n        this.currencyRepositories.push(gazzethRepository)\n    }\n    \n    public getBalanceOf(currency: SUPPORTED_CURRENCY, library: Web3Provider): Promise<number> {\n        return this.currencyRepositories[currency].getBalanceOf(library);\n    }\n}\n","import { injectable, inject } from \"inversify\"\nimport { TYPES } from '@constants/types';\nimport IBlockchainRepository from \"@application/repositories/IBlockchainRepository\";\nimport BlockchainGetUseUsecase from \"@application/usecases/blockchain/getUse/BlockchainGetUseUsecase\";\nimport BlockchainGetAddressUsecase from \"@application/usecases/blockchain/getAddress/BlockchainGetAddressUsecase\";\nimport BlockchainGetLinkUsecase from \"@application/usecases/blockchain/getLink/BlockchainGetUseUsecase\";\nimport BlockchainGetBalanceOfUsecase from \"@application/usecases/blockchain/getBalanceOf/BlockchainGetBalanceOfUsecase\";\nimport ICurrencyRepository from \"@application/repositories/ICurrencyRepository\";\n\n@injectable()\nexport default class BlockchainService {\n    @inject(TYPES.IBlockchainRepository) private blockchainRepository: IBlockchainRepository;\n\n    @inject(TYPES.IEthRepository) private ethRepository: ICurrencyRepository;\n    @inject(TYPES.IDaiRepository) private daiRepository: ICurrencyRepository;\n    @inject(TYPES.IGazzethRepository) private gazzethRepository: ICurrencyRepository;\n\n    public getBlockchainGetUseUseCase() {\n        return new BlockchainGetUseUsecase(this.blockchainRepository);\n    }\n\n    public getBlockchainGetAddressUsecase() {\n        return new BlockchainGetAddressUsecase();\n    }\n    \n    public getBlockchainGetLinkUsecase() {\n        return new BlockchainGetLinkUsecase(this.blockchainRepository);\n    }\n\n    public getBlockchainGetBalanceOfUsecase() {\n        return new BlockchainGetBalanceOfUsecase(this.ethRepository, this.daiRepository, this.gazzethRepository);\n    }\n}\n","import ITopicRepository from \"@application/repositories/ITopicRepository\";\nimport Pagination from \"@domain/models/Pagination/Pagination\";\nimport Topic from \"@domain/models/Topic/Topic\";\nimport ITopicListUsecase from \"./ITopicListUsecase\";\n\nexport default class TopicListUsecase implements ITopicListUsecase {\n\n    private topicRepository: ITopicRepository;\n\n    constructor(topicRepository: ITopicRepository) {\n        this.topicRepository = topicRepository;\n    }\n    \n    public async list(pagination: Pagination): Promise<Topic[]> {\n        return this.topicRepository.list(pagination);\n    }\n}\n","import ITopicRepository from \"@application/repositories/ITopicRepository\";\nimport Topic from \"@domain/models/Topic/Topic\";\nimport ITopicSubscribeUsecase from \"./ITopicSubscribeUsecase\";\nimport { Web3Provider } from '@ethersproject/providers'\nimport ICurrencyRepository from \"@application/repositories/ICurrencyRepository\";\n\nexport default class TopicSubscribeUsecase implements ITopicSubscribeUsecase {\n\n    private topicRepository: ITopicRepository;\n    private daiRepository: ICurrencyRepository;\n\n    constructor(topicRepository: ITopicRepository, daiRepository: ICurrencyRepository) {\n        this.topicRepository = topicRepository;\n        this.daiRepository = daiRepository;\n    }\n    \n    public async subscribe(topics: { topic: Topic, quantity: number }[], library: Web3Provider): Promise<void[]> { \n        let total = 0;\n        topics.forEach(topic => {\n            total = total + topic.quantity * topic.topic.costJury;\n        });        \n        const balance = await this.daiRepository.getBalanceOf(library)\n\n        if (balance < total) {\n            throw new Error(\"insuficient-funds-error\")\n        }\n\n        let arrayOfPromise: Promise<void>[] = [];\n        topics.forEach(topic => {\n            arrayOfPromise.push(this.topicRepository.subscribe(topic, library))\n        });\n        return Promise.all(arrayOfPromise);\n    }\n}\n","import ITopicRepository from \"@application/repositories/ITopicRepository\";\nimport Pagination from \"@domain/models/Pagination/Pagination\";\nimport Topic from \"@domain/models/Topic/Topic\";\nimport ITopicListByAddressUsecase from \"./ITopicListByAddressUsecase\";\n\nexport default class TopicListByAddressUsecase implements ITopicListByAddressUsecase {\n\n    private topicRepository: ITopicRepository;\n\n    constructor(topicRepository: ITopicRepository) {\n        this.topicRepository = topicRepository;\n    }\n    \n    public async listByAddress(pagination: Pagination, address: string): Promise<{ topic: Topic, quantity: number }[]> {\n        return this.topicRepository.listByAddress(pagination, address);\n    }\n}\n","import { injectable, inject } from \"inversify\"\nimport { TYPES } from '@constants/types';\nimport ITopicRepository from \"@application/repositories/ITopicRepository\";\nimport TopicListUsecase from \"@application/usecases/topic/list/TopicListUsecase\";\nimport TopicSubscribeUsecase from \"@application/usecases/topic/subscribe/TopicSubscribeUsecase\";\nimport ICurrencyRepository from \"@application/repositories/ICurrencyRepository\";\nimport TopicListByAddressUsecase from \"@application/usecases/topic/listByAddress/TopicListByAddressUsecase\";\n\n@injectable()\nexport default class TopicService {\n    @inject(TYPES.ITopicRepository) private topicRepository: ITopicRepository;\n    @inject(TYPES.IDaiRepository) private daiRepository: ICurrencyRepository;\n\n    public getTopicListUseCase() {\n        return new TopicListUsecase(this.topicRepository);\n    }\n\n    public getTopicListByAddressUseCase() {\n        return new TopicListByAddressUsecase(this.topicRepository);\n    }\n\n    public getTopicSubscribeUsecase() {\n        return new TopicSubscribeUsecase(this.topicRepository, this.daiRepository);\n    }\n}\n","import IVoteRepository from \"@application/repositories/IVoteRepository\";\nimport Vote from \"@domain/models/Vote/Vote\";\nimport { Web3Provider } from '@ethersproject/providers'\nimport IVoteCommitUsecase from \"./IVoteCommitUsecase\";\n\nexport default class VoteCommitUsecase implements IVoteCommitUsecase {\n\n    private voteRepository: IVoteRepository;\n\n    constructor(voteRepository: IVoteRepository) {\n        this.voteRepository = voteRepository;\n    }\n    \n    public async commit(vote: Vote, library: Web3Provider): Promise<void> {\n        return this.voteRepository.commit(vote, library);\n    }\n}\n","import IVoteRepository from \"@application/repositories/IVoteRepository\";\nimport Vote from \"@domain/models/Vote/Vote\";\nimport { Web3Provider } from '@ethersproject/providers'\nimport IVoteRevealUsecase from \"./IVoteRevealUsecase\";\n\nexport default class VoteRevealUsecase implements IVoteRevealUsecase {\n\n    private voteRepository: IVoteRepository;\n\n    constructor(voteRepository: IVoteRepository) {\n        this.voteRepository = voteRepository;\n    }\n    \n    public async reveal(vote: Vote, library: Web3Provider): Promise<void> {\n        return this.voteRepository.reveal(vote, library);\n    }\n}\n","import { injectable, inject } from \"inversify\"\nimport { TYPES } from '@constants/types';\nimport IVoteRepository from \"@application/repositories/IVoteRepository\";\nimport VoteCommitUsecase from \"@application/usecases/vote/commit/VoteCommitUsecase\";\nimport VoteRevealUsecase from \"@application/usecases/vote/reveal/VoteRevealUsecase\";\n\n@injectable()\nexport default class VoteService {\n    @inject(TYPES.IVoteRepository) private voteRepository: IVoteRepository;\n\n    public getVoteCommitUseCase() {\n        return new VoteCommitUsecase(this.voteRepository);\n    }\n\n    public getVoteRevealUsecase() {\n        return new VoteRevealUsecase(this.voteRepository);\n    }\n}\n","export default class ErrorMapper {\n    public static toEntity(e: Error): Error {\n        const messageParse = e.message.match(/\"message\":\"(\\w|:|\\s)+\"/)\n\n        let newMessage;\n        if (messageParse) {\n            const message = messageParse[0].substring(31, messageParse[0].length - 1)\n            switch (message) {\n                case \"Publication does not exist\":\n                    newMessage = \"publication-not-exist-error\"; break;\n                case \"You are not a juror for this publication\":\n                    newMessage = \"not-juror-of-publication\"; break;\n                case \"Topic does not exists\":\n                case \"Unexistent topic\":\n                    newMessage = \"topic-not-exist-error\"; break;\n                case \"Closed topic\":\n                    newMessage = \"close-topic-error\"; break;\n                case \"Insuficient selectable jurors in the topic\":\n                    newMessage = \"insufficient-jurors-in-topic-error\"; break;\n                case \"Vote commit phase has already finished\":\n                    newMessage = \"commit-already-finished-error\"; break;\n                case \"Invalid nonce\": //TODO check\n                    newMessage = \"invalid-nonce\"; break;\n                case \"You must be registered in Proof of Humanity\":\n                case \"To be a juror you must be registered on Proof of Humanity\":\n                    newMessage = \"poh-error\"; break;\n                case \"Reveal already done\":\n                    newMessage = \"already-reveal-error\"; break;\n                case \"Penalized juror\":\n                    newMessage = \"penalized-juror-error\"; break;\n                case \"Missing vote commitment\":\n                    newMessage = \"missing-commitment-error\"; break;\n                case \"Vote reveal phase has already finished\":\n                    newMessage = \"reveal-already-finished-error\"; break;\n                case \"Invalid vote value\": //TODO check\n                    newMessage = \"invalid-vote-error\"; break;\n                case \"Invalid vote reveal: invalid signature\":\n                    newMessage = \"invalid-signature-error\"; break;\n                case \"Publication rewards already withdrawn\":\n                    newMessage = \"arlready-withdrawn-error\"; break;\n                case \"Times must be less than current juror votings\":\n                    newMessage = \"times-juror-error\"; break;\n                default:\n                    newMessage = \"unknown-error\";\n            }\n        }\n        else {\n            console.log(e.message)\n            switch (e.message) {\n                case \"MetaMask Message Signature: User denied message signature.\":\n                    newMessage = \"signature-denied-error\"; break;\n                case \"MetaMask Tx Signature: User denied transaction signature.\":\n                    newMessage = \"transaction-denied-error\"; break;\n                default:\n                    newMessage = \"unknown-error\";\n            }\n        }\n        return new Error(newMessage)\n    }\n}\n","import toBuffer from 'it-to-buffer'\n\nexport default class IpfsMapper {\n    public static async toEntity(dto: AsyncIterable<Uint8Array>): Promise<string> {\n        const buffer = await toBuffer(dto);\n        return new TextDecoder().decode(buffer);\n    }\n}","import { VOTE_VALUE } from \"@constants/vote_value\";\nimport Topic from \"@domain/models/Topic/Topic\";\nimport Vote from \"../Vote/Vote\";\n\nexport default class News {\n    id?: number;\n    verified: VOTE_VALUE;\n    topic: Topic;\n    content: string;\n    votes: Vote[];\n    publishDate: number;\n    withdraw: boolean;\n    voteCounter: number[];\n\n    constructor(id: number, content: string, topic: Topic, verified: VOTE_VALUE,\n                votes?: Vote[], publishDate?: number, withdraw?: boolean, \n                voteCounter?: number[]) {\n        this.id = id;\n        this.verified = verified;\n        this.content = content;\n        this.topic = topic;\n        this.votes = votes ? votes : [];\n        this.publishDate = publishDate;\n        this.withdraw = withdraw;\n        this.voteCounter = voteCounter;\n    }\n\n    public isCommitOver(): boolean {\n        return Date.now() > this.publishDate * 1000 + this.topic.commitPhaseDuration * 1000; \n    }\n\n    public isRevealOver(): boolean {\n        return Date.now() > this.publishDate * 1000 + this.topic.commitPhaseDuration * 1000 + this.topic.revealPhaseDuration * 1000; \n    }\n\n    public isWithdrawOver(): boolean {\n        return this.withdraw; \n    }\n}\n","import { VOTE_VALUE } from \"@constants/vote_value\";\nimport Topic from \"../Topic/Topic\";\n\nexport default class NewsPreview {\n    id: number;\n    verified: VOTE_VALUE;\n    title: string;\n    lede: string;\n    image: string;\n    topic: Topic;\n    publishDate: number;\n\n    constructor(id: number, title: string, lede: string, image: string, verified: VOTE_VALUE,\n        topic: Topic, publishDate: number) {\n        this.id = id;\n        this.verified = verified;\n        this.title = title;\n        this.lede = lede;\n        this.image = image;\n        this.topic = topic;\n        this.publishDate = publishDate;\n    }\n\n    setLede(lede: string) {\n        return new NewsPreview(this.id, this.title, lede, this.image, this.verified, \n            this.topic, this.publishDate);\n    }  \n\n    public isCommitOver(): boolean {\n        return Date.now() > this.publishDate * 1000 + this.topic.commitPhaseDuration * 1000; \n    }\n    \n    public isRevealOver(): boolean {\n        return Date.now() > this.publishDate * 1000 + this.topic.commitPhaseDuration * 1000 + this.topic.revealPhaseDuration * 1000; \n    }\n}\n","export default class Topic {\n    name: string;\n    costJury: number;\n    costPublish: number;\n    commitPhaseDuration: number;\n    revealPhaseDuration: number;\n\n    constructor(name: string, costJury: number, costPublish: number, \n        commitPhaseDuration?: number, revealPhaseDuration?: number) {//TODO remove ?\n        this.name = name;\n        this.costJury = costJury;\n        this.costPublish = costPublish;\n        this.commitPhaseDuration = commitPhaseDuration;\n        this.revealPhaseDuration = revealPhaseDuration;\n    }\n}\n","import { VOTE_VALUE } from \"@constants/vote_value\";\n\nexport default class Vote {\n    value: VOTE_VALUE;\n    publicationId: number;\n    justification: string;\n    penalized: boolean;\n    address: string;\n\n    constructor(value: VOTE_VALUE, publicationId: number, justification?: string, penalized?: boolean, address?: string) {\n        this.value = value;\n        this.publicationId = publicationId;\n        this.justification = justification ? justification : \"\";\n        this.penalized = penalized ? penalized : false;\n        this.address = address ? address : \"\";\n    }\n}\n","import { VOTE_VALUE } from \"@constants/vote_value\";\nimport NewsFilter from \"@domain/models/Filter/NewsFilter\";\nimport News from \"@domain/models/News/News\";\nimport NewsPreview from \"@domain/models/News/NewsPreview\";\nimport Topic from \"@domain/models/Topic/Topic\";\nimport Vote from \"@domain/models/Vote/Vote\";\nimport { ethers } from \"ethers\";\n\nexport default class NewsMapper {\n    public static toEntityPreview(dto: any): NewsPreview {\n        const parts = dto.file.match(/[^\\n]+/g);\n        const title = parts[0].substring(2, parts[0].length);\n        const image = parts[1].substring(4, parts[1].length - 1);\n        const lede = parts[2];\n        const winningVote: number = dto.voting.winningVote;\n        const topic: any = dto.topic\n        return new NewsPreview(parseInt(dto.id), title, lede, image, \n            NewsMapper.toEntityVoteValue(winningVote), NewsMapper.toEntityTopic(topic),\n            parseInt(dto.publishDate))\n    }\n\n    public static toEntity(dto: any): News {\n        const topic: any = dto.topic\n        const winningVote: number = dto.voting.winningVote;\n        const votes: any[] = dto.voting.votes;\n        const voteCounters: string[] = dto.voting.voteCounters;\n        return new News(parseInt(dto.id), dto.file, NewsMapper.toEntityTopic(topic), \n            NewsMapper.toEntityVoteValue(winningVote), votes.map((v) => NewsMapper.toEntityVote(v, parseInt(dto.id))),\n            parseInt(dto.publishDate), dto.voting.withdrawn, voteCounters.map(vc => parseInt(vc)))\n    }\n\n    public static toEntityVote(dto: any, publicationId: number): Vote {\n        return new Vote(NewsMapper.toEntityVoteValue(dto.value), publicationId, dto.justification, dto.penalized, dto.juror.id)\n    }\n    \n    public static toEntityTopic(dto: any): Topic {\n        return new Topic(dto.id, parseFloat(ethers.utils.formatUnits(dto.priceToBeJuror, 18)), \n            parseFloat(ethers.utils.formatUnits(dto.priceToPublish, 18)), \n            parseInt(dto.commitPhaseDuration), parseInt(dto.revealPhaseDuration))\n    }\n\n    public static toEntityVoteValue(vote: number): VOTE_VALUE {\n        switch(vote) {\n            case 0:\n                return VOTE_VALUE.None\n            case 1:\n                return VOTE_VALUE.True\n            case 2:\n                return VOTE_VALUE.False\n            case 3:\n                return VOTE_VALUE.Unqualified\n        }\n    }\n\n    public static toQuery(filter: NewsFilter): string[] {\n        let queries: string[] = [];\n        console.log(filter)\n        if (filter.verified === undefined) {\n            queries.push(\"\")\n        }\n        else {\n            queries.push(`, where: {winningVote: ${filter.verified}}`)\n        }\n        if (filter.topic === undefined) {\n            queries.push(\"\")\n        }\n        else {\n            queries.push(`(where: {id: \"${filter.topic}\"})`)\n        } \n        return queries; \n    }\n}\n","import { injectable } from 'inversify';\nimport INewsRepository from \"@application/repositories/INewsRepository\";\nimport Filter from \"@domain/models/Filter/NewsFilter\";\nimport NewsPreview from \"@domain/models/News/NewsPreview\";\nimport News from \"@domain/models/News/News\";\nimport Pagination from \"@domain/models/Pagination/Pagination\";\nimport { ethers } from \"ethers\";\nimport Protocol from '@assets/abis/Protocol.json';\nimport { Web3Provider } from '@ethersproject/providers'\nimport { signDaiPermit } from 'eth-permit';\nimport IpfsHttpClient from \"ipfs-http-client\"\nimport ErrorMapper from '../ErrorMapper';\nimport IpfsMapper from './IpfsMapper';\nimport NewsMapper from './NewsMapper';\n\n@injectable()\nexport default class NewsGraphRepository implements INewsRepository {\n\n    private static readonly PROTOCOL_CONTRACT_ADDRESS: string = process.env.REACT_APP_PROTOCOL_CONTRACT_ADDRESS || \"\";\n    private static readonly DAI_CONTRACT_ADDRESS: string = process.env.REACT_APP_DAI_CONTRACT_ADDRESS || \"\";\n    private static readonly API_URL: string = process.env.REACT_APP_API_URL || \"\";\n\n    private static readonly IPFS_URL: string = process.env.REACT_APP_IPFS_URL || \"\";\n    private static readonly IPFS_PORT: string = process.env.REACT_APP_IPFS_PORT || \"\";\n    private static readonly IPFS_PROTOCOL: string = process.env.REACT_APP_IPFS_PROTOCOL || \"\";\n\n    private ipfsClient = IpfsHttpClient.create({\n        host: NewsGraphRepository.IPFS_URL,\n        port: parseInt(NewsGraphRepository.IPFS_PORT),\n        protocol: NewsGraphRepository.IPFS_PROTOCOL\n    })\n\n    public async list(pagination: Pagination, filter: Filter): Promise<NewsPreview[]> {\n        const queries = NewsMapper.toQuery(filter)\n        const options: RequestInit = {\n            method: \"POST\",\n            body: JSON.stringify({\n                query: `\n                { \n                    topics${queries[1]} {\n                        votings(skip: ${pagination.offset}, first: ${pagination.limit}${queries[0]}) { \n                            publication { \n                                id \n                                hash \n                                author \n                                topic { \n                                    id\n                                    priceToPublish\n                                    priceToBeJuror\n                                    authorReward\n                                    jurorReward\n                                    commitPhaseDuration\n                                    revealPhaseDuration\n                                    selectableJurorsQuantity  \n                                } \n                                publishDate \n                                voting { \n                                    withdrawn \n                                    winningVote \n                                } \n                            }\n                        } \n                    } \n                }`,\n                variables: null\n            }),\n            headers: { \"Content-Type\": \"application/json\" }\n        }\n\n        const result: any[] = (await (await fetch(NewsGraphRepository.API_URL, options)).json())\n            .data.topics.flatMap((t: any) => t.votings.map((v: any) => v.publication))\n        const resultWithFile: NewsPreview[] = []\n        for (let i = 0; i < result.length; i++) {\n            const element = result[i];\n            element.file = await IpfsMapper.toEntity(this.ipfsClient.cat(element.hash))\n            resultWithFile.push(NewsMapper.toEntityPreview(element))\n        }\n\n        return resultWithFile;\n    }\n\n    public async listByAddress(pagination: Pagination, address: string): Promise<NewsPreview[]> {\n        const options: RequestInit = {\n            method: \"POST\",\n            body: JSON.stringify({\n                query: `\n                { \n                    jurors(where: {id: \"${address.toLocaleLowerCase()}\"}) { \n                        id\n                        votes(skip: ${0}, first: ${100}, where: {withdrawn: false}) {\n                            voting {\n                                publication {\n                                    id\n                                    hash\n                                    publishDate\n                                    voting { \n                                        winningVote \n                                    } \n                                    topic { \n                                        id\n                                        priceToPublish\n                                        priceToBeJuror\n                                        authorReward\n                                        jurorReward\n                                        commitPhaseDuration\n                                        revealPhaseDuration\n                                        selectableJurorsQuantity \n                                    } \n                                }\n                            }\n                        }\n                    } \n                }`,\n                variables: null\n            }),\n            headers: { \"Content-Type\": \"application/json\" }\n        }\n\n        const result: any[] = (await (await fetch(NewsGraphRepository.API_URL, options)).json()).data.jurors[0].votes.map((m: any) => m.voting.publication)\n        const resultWithFile: NewsPreview[] = []\n        for (let i = 0; i < result.length; i++) {\n            const element = result[i];\n            element.file = await IpfsMapper.toEntity(this.ipfsClient.cat(element.hash))\n            resultWithFile.push(NewsMapper.toEntityPreview(element))\n        }\n\n        return resultWithFile;\n    }\n\n    public async get(id: number): Promise<News> {\n        const options: RequestInit = {\n            method: \"POST\",\n            body: JSON.stringify({\n                query:\n                    `{ \n                    publications(where: {id: \"0x${id.toString(16)}\"}) { \n                        id \n                        hash \n                        author\n                        publishDate \n                        topic { \n                            id\n                            priceToPublish\n                            priceToBeJuror\n                            authorReward\n                            jurorReward\n                            commitPhaseDuration\n                            revealPhaseDuration\n                            selectableJurorsQuantity \n                        }  \n                        voting { \n                            withdrawn \n                            winningVote\n                            voteCounters\n                            votes {\n                                id\n                                juror {\n                                    id\n                                }\n                                commitment\n                                value\n                                justification\n                                penalized \n                            }\n                        } \n                    } \n                }`,\n                variables: null\n            }),\n            headers: { \"Content-Type\": \"application/json\" }\n        }\n\n        const result: any = (await (await fetch(NewsGraphRepository.API_URL, options)).json()).data.publications[0]\n\n        result.file = await IpfsMapper.toEntity(this.ipfsClient.cat(result.hash))\n\n        return NewsMapper.toEntity(result)\n    }\n\n    public async post(news: News, library: Web3Provider): Promise<void> {\n        try {\n            const { path } = await this.ipfsClient.add(news.content, { pin: true })\n\n            const contract = new ethers.Contract(NewsGraphRepository.PROTOCOL_CONTRACT_ADDRESS, Protocol, library.getSigner());\n            const senders = await library.listAccounts()\n            const result = await signDaiPermit(window.ethereum, NewsGraphRepository.DAI_CONTRACT_ADDRESS, senders[0],\n                NewsGraphRepository.PROTOCOL_CONTRACT_ADDRESS);\n            const tx = await contract.publish(path, news.topic.name, result.nonce, result.expiry, result.v, result.r, result.s)\n            return await tx.wait();\n        } catch (e) {\n            throw ErrorMapper.toEntity(e)\n        }\n    }\n\n    public async withdraw(id: number, library: Web3Provider): Promise<void> {\n        try {\n            const contract = new ethers.Contract(NewsGraphRepository.PROTOCOL_CONTRACT_ADDRESS, Protocol, library.getSigner());\n            const tx = await contract.withdrawRewards(id)\n            return await tx.wait();\n        } catch (e) {\n            throw ErrorMapper.toEntity(e)\n        }\n    }\n}\n","import { InjectedConnector } from '@web3-react/injected-connector'\nimport { AbstractConnector } from '@web3-react/abstract-connector'\nimport IWalletRepository from './IWalletRepository';\n\nexport default class MetaMaskRepository implements IWalletRepository {\n\n    public isInstall(): boolean {\n        return !!(window.web3 || window.ethereum);\n    }\n\n    public getConnector(): AbstractConnector {\n        return new InjectedConnector({\n            supportedChainIds: [3], \n        });\n    }\n}\n","import IWalletRepository from \"@application/repositories/IWalletRepository\";\nimport { walletType } from \"@constants/supported_wallets\";\nimport MetaMaskRepository from \"./MetaMaskRepository\";\nimport IWalletRepository2 from \"./IWalletRepository\"\nimport { AbstractConnector } from '@web3-react/abstract-connector'\nimport { injectable } from 'inversify';\n\n@injectable()\nexport default class WalletRepository implements IWalletRepository {\n\n    private walletsRepository: Map<walletType, IWalletRepository2>\n\n    constructor() {\n        this.walletsRepository = new Map([\n            [\"metamask\", new MetaMaskRepository()]\n        ])\n    }\n\n    public getConnector(wallet: walletType): AbstractConnector {\n        return this.walletsRepository.get(wallet).getConnector()\n    }\n\n    public isInstall(wallet: walletType): boolean {\n        return this.walletsRepository.get(wallet).isInstall()\n    }\n}","export default class Chain {\n    public id: number;\n    public name: string;\n\n    constructor(id: number, name: string) {\n        this.id   = id;\n        this.name = name;\n    }\n}\n","import Chain from \"@domain/models/Chain/Chain\";\n\nexport default class ChainMapper {\n    \n    public static toEntity(id: number): Chain {\n        let name: string;\n\n        switch (id) {\n            case 1:\n                name = \"mainnet\"; break;\n            case 3:\n                name = \"ropsten\"; break;\n            case 42:\n                name = \"kovan\"; break;\n            case 4:\n                name = \"rinkeby\"; break;\n            case 5:\n                name = \"gorli\"; break;           \n            default:\n                name = \"unknown\"; break;\n        }\n\n        return new Chain(id, name);\n    }\n\n}\n","import ChainMapper from './ChainMapper';\nimport { LinkType } from '@application/repositories/IBlockchainRepository';\n\nexport default class LinkMapper {\n    \n    public static toEntity(chainId: number, data: string, type: LinkType): string {\n        let mapType: string;\n        switch(type) {\n            case \"transaction\":\n                mapType = \"tx\"; break;\n            case \"token\":\n                mapType = \"token\"; break;\n            case \"address\":\n                mapType = \"address\"; break;\n            case \"block\":\n                mapType = \"block\"; break;\n        }\n        const prefix = (chainId === 1) ? '' : `${ChainMapper.toEntity(chainId).name}.`\n        return `https://${prefix}etherscan.io/${mapType}/${data}`\n    }\n\n}\n","import { useWeb3React } from '@web3-react/core'\nimport IBlockchainRepository, { IUseBlockchain, IUseActiveBlockchain, LinkType } from '@application/repositories/IBlockchainRepository';\nimport { injectable } from 'inversify';\nimport { Web3Provider } from '@ethersproject/providers'\nimport ChainMapper from './ChainMapper';\nimport LinkMapper from './LinkMapper';\n\n@injectable()\nexport default class EthereumRepository implements IBlockchainRepository {\n\n    public getUse(): IUseBlockchain {\n        const useEthereum: IUseBlockchain = () => {\n            const { active, account, connector, activate, error } = useWeb3React();\n            return [active, account, connector, activate, error];\n        }\n        return useEthereum\n    }\n\n    public getUseActive(): IUseActiveBlockchain {\n        const useEthereum: IUseActiveBlockchain = () => {\n            const context = useWeb3React<Web3Provider>()\n            const contextNetwork = useWeb3React<Web3Provider>('NETWORK')\n            const { chainId, account, connector, library } = context.active ? context : contextNetwork;\n            const chain = ChainMapper.toEntity(chainId);\n            return [chain, account, connector, library];\n        }\n        return useEthereum\n    }\n\n    public getLink(chainId: number, data: string, type: LinkType): string {\n        return LinkMapper.toEntity(chainId, data, type)\n    }\n}\n","import Topic from \"@domain/models/Topic/Topic\";\nimport { ethers } from \"ethers\";\n\nexport default class TopicMapper {\n\n    public static toEntity(dto: any): Topic {\n        return new Topic(dto.id, parseFloat(ethers.utils.formatUnits(dto.priceToBeJuror, 18)), \n            parseFloat(ethers.utils.formatUnits(dto.priceToPublish, 18)), \n            parseInt(dto.commitPhaseDuration), parseInt(dto.revealPhaseDuration))\n    }\n\n}\n","import ITopicRepository from \"@application/repositories/ITopicRepository\";\nimport Pagination from \"@domain/models/Pagination/Pagination\";\nimport Topic from \"@domain/models/Topic/Topic\";\nimport { injectable } from 'inversify';\nimport { ethers } from \"ethers\";\nimport Protocol from '@assets/abis/Protocol.json';\nimport { Web3Provider } from '@ethersproject/providers'\nimport { signDaiPermit } from 'eth-permit';\nimport ErrorMapper from \"../ErrorMapper\";\nimport TopicMapper from './TopicMapper';\n\n@injectable()\nexport default class TopicGraphRepository implements ITopicRepository {\n\n    private static readonly PROTOCOL_CONTRACT_ADDRESS: string = process.env.REACT_APP_PROTOCOL_CONTRACT_ADDRESS || \"\";\n    private static readonly DAI_CONTRACT_ADDRESS: string = process.env.REACT_APP_DAI_CONTRACT_ADDRESS || \"\";\n    private static readonly API_URL: string = process.env.REACT_APP_API_URL || \"\";\n\n    public async list(pagination: Pagination): Promise<Topic[]> { //TODO pagination\n        const options: RequestInit = {\n            method: \"POST\",\n            body: JSON.stringify({\n                query: \n                `{ \n                    topics(skip: ${0}, first: ${100}) \n                    { \n                        id\n                        priceToPublish\n                        priceToBeJuror\n                        authorReward\n                        jurorReward\n                        commitPhaseDuration\n                        revealPhaseDuration\n                        selectableJurorsQuantity \n                    }\n                }`,\n                variables: null\n            }),\n            headers: { \"Content-Type\": \"application/json\" }\n        }\n\n        const result: any[] = (await (await fetch(TopicGraphRepository.API_URL, options)).json()).data.topics\n\n        return result.map((r) => TopicMapper.toEntity(r));\n    }\n\n    public async listByAddress(pagination: Pagination, address: string): Promise<{ topic: Topic, quantity: number }[]> {\n        const options: RequestInit = {\n            method: \"POST\",\n            body: JSON.stringify({\n                query: \n                `{\n                    jurors(where: {id: \"${address.toLocaleLowerCase()}\"}) {\n                      id\n                      subscriptions {\n                        topic {\n                          id\n                          priceToPublish\n                          priceToBeJuror\n                          authorReward\n                          jurorReward\n                          commitPhaseDuration\n                          revealPhaseDuration\n                          selectableJurorsQuantity \n                        }\n                        times\n                      }\n                    }\n                }`,\n                variables: null\n            }),\n            headers: { \"Content-Type\": \"application/json\" }\n        }\n\n        const result: any[] = (await (await fetch(TopicGraphRepository.API_URL, options)).json()).data.jurors\n\n        if (result.length === 0) {\n            return [];\n        }\n\n        return result[0].subscriptions.map((r: any) => {\n            return { topic: TopicMapper.toEntity(r.topic), quantity: parseInt(r.times) }\n        });\n    }\n\n    public async subscribe(topic: { topic: Topic, quantity: number }, library: Web3Provider): Promise<void> {\n        try {\n            const contract = new ethers.Contract(TopicGraphRepository.PROTOCOL_CONTRACT_ADDRESS, Protocol, library.getSigner());\n            const senders = await library.listAccounts()\n            const result = await signDaiPermit(library, TopicGraphRepository.DAI_CONTRACT_ADDRESS, senders[0],\n                TopicGraphRepository.PROTOCOL_CONTRACT_ADDRESS);\n            const tx = await contract.subscribeAsJuror(topic.topic.name, topic.quantity, result.nonce, result.expiry, result.v, result.r, result.s)\n            return await tx.wait();\n        } catch (e) {\n            throw ErrorMapper.toEntity(e)\n        }\n    }\n}\n","import { injectable } from 'inversify';\nimport { ethers } from \"ethers\";\nimport Protocol from '@assets/abis/Protocol.json';\nimport { Web3Provider } from '@ethersproject/providers'\nimport { getChainId, RSV, signData } from 'eth-permit/dist/rpc';\nimport IVoteRepository from '@application/repositories/IVoteRepository';\nimport Vote from '@domain/models/Vote/Vote';\nimport ErrorMapper from '../ErrorMapper';\n\n@injectable()\nexport default class VoteGraphRepository implements IVoteRepository {\n\n    private static readonly PROTOCOL_CONTRACT_ADDRESS: string = process.env.REACT_APP_PROTOCOL_CONTRACT_ADDRESS || \"\";\n\n    public async commit(vote: Vote, library: Web3Provider): Promise<void> {\n        try {\n            const contract = new ethers.Contract(VoteGraphRepository.PROTOCOL_CONTRACT_ADDRESS, Protocol, library.getSigner());\n            const sender = (await library.listAccounts())[0]\n\n            const nonce = (await contract.getCommitmentNonce(sender, vote.publicationId))._hex;\n            const result = await signVote(library, VoteGraphRepository.PROTOCOL_CONTRACT_ADDRESS, sender, vote.publicationId, vote.value, nonce);\n            const encode = ethers.utils.defaultAbiCoder.encode([\"uint8\", \"bytes32\", \"bytes32\"], [result.v, result.r, result.s]);\n            const commitment = ethers.utils.keccak256(encode);\n            const tx = await contract.commitVote(vote.publicationId, commitment, nonce)\n            return await tx.wait();\n        } catch (e) {\n            throw ErrorMapper.toEntity(e)\n        }\n    }\n\n    public async reveal(vote: Vote, library: Web3Provider): Promise<void> {\n        try {\n            const contract = new ethers.Contract(VoteGraphRepository.PROTOCOL_CONTRACT_ADDRESS, Protocol, library.getSigner());\n            const sender = (await library.listAccounts())[0]\n            const commitmentNonce = (parseInt((await contract.getCommitmentNonce(sender, vote.publicationId))._hex, 16) - 1).toString(16);\n            const result = await signVote(library, VoteGraphRepository.PROTOCOL_CONTRACT_ADDRESS, sender, vote.publicationId, vote.value, commitmentNonce);\n            const tx = await contract.revealVote(vote.publicationId, vote.value, commitmentNonce, vote.justification, result.v, result.r, result.s)\n            return await tx.wait();\n        } catch (e) {\n            throw ErrorMapper.toEntity(e)\n        }\n    }\n}\n\nconst getDomain = async (provider: any, contractAddress: string): Promise<Domain> => {\n    const chainId = await getChainId(provider);\n    const domain: Domain = { name: 'Gazzeth Protocol', version: '1', chainId: chainId, verifyingContract: contractAddress };\n    return domain;\n};\n\nconst EIP712Domain = [\n    { name: \"name\", type: \"string\" },\n    { name: \"version\", type: \"string\" },\n    { name: \"chainId\", type: \"uint256\" },\n    { name: \"verifyingContract\", type: \"address\" },\n];\n\ninterface Domain {\n    name: string;\n    version: string;\n    chainId: number;\n    verifyingContract: string;\n}\n\ninterface VoteMessage {\n    publicationId: number;\n    vote: number;\n    nonce: string;\n}\n\nconst createTypedVoteData = (message: VoteMessage, domain: Domain) => {\n    const typedData = {\n        types: {\n            EIP712Domain,\n            Vote: [\n                { name: \"publicationId\", type: \"uint256\" },\n                { name: \"vote\", type: \"uint8\" },\n                { name: \"nonce\", type: \"uint256\" },\n            ],\n        },\n        primaryType: \"Vote\",\n        domain,\n        message,\n    };\n\n    return typedData;\n};\n\nconst signVote = async (\n    provider: any,\n    contractAddress: string,\n    sender: string,\n    publicationId: number,\n    vote: number,\n    nonce: string\n): Promise<VoteMessage & RSV> => {\n    const message: VoteMessage = {\n        publicationId: publicationId,\n        vote: vote,\n        nonce: nonce,\n    };\n\n    const domain = await getDomain(provider, contractAddress);\n    const typedData = createTypedVoteData(message, domain);\n    const sig = await signData(provider, sender, typedData);\n\n    return { ...sig, ...message };\n};\n","import ICurrencyRepository from \"@application/repositories/ICurrencyRepository\";\nimport { Web3Provider } from '@ethersproject/providers'\nimport { injectable } from 'inversify';\nimport { ethers } from \"ethers\";\nimport Dai from '@assets/abis/IDai.json';\nimport ErrorMapper from '../ErrorMapper';\n\n@injectable()\nexport default class DaiEthereumRepository implements ICurrencyRepository {\n\n    private static readonly DAI_CONTRACT_ADDRESS: string = process.env.REACT_APP_DAI_CONTRACT_ADDRESS || \"\";\n\n    public async getBalanceOf(library: Web3Provider): Promise<number> {\n        try {\n            const contract = new ethers.Contract(DaiEthereumRepository.DAI_CONTRACT_ADDRESS, Dai, library.getSigner());\n            const sender = (await library.listAccounts())[0]\n            return await contract.balanceOf(sender).then((result: any) => parseFloat(ethers.utils.formatUnits(result, 18)));\n        } catch (e) {\n            throw ErrorMapper.toEntity(e)\n        }\n    }\n}\n","import \"reflect-metadata\";\nimport { Container } from \"inversify\";\nimport { TYPES } from \"@constants/types\";\n\nimport NewsService from \"@configuration/usecases/NewsService\";\nimport WalletService from \"@configuration/usecases/WalletService\";\nimport BlockchainService from \"@configuration/usecases/BlockchainService\";\nimport TopicService from \"@configuration/usecases/TopicService\";\nimport VoteService from \"@configuration/usecases/VoteService\";\n\nimport INewsRepository from \"@application/repositories/INewsRepository\";\nimport IWalletRepository from \"@application/repositories/IWalletRepository\";\nimport IBlockchainRepository from \"@application/repositories/IBlockchainRepository\";\nimport ITopicRepository from \"@application/repositories/ITopicRepository\";\nimport IVoteRepository from \"@application/repositories/IVoteRepository\";\nimport ICurrencyRepository from \"@application/repositories/ICurrencyRepository\";\n\nimport NewsGraphRepository from \"@infraestructure/repositories/news/NewsGraphRepository\";\nimport WalletRepository from \"@infraestructure/repositories/wallet/WalletRepository\";\nimport EthereumRepository from \"@infraestructure/repositories/blockchain/EthereumRepository\";\nimport TopicGraphRepository from \"@infraestructure/repositories/topic/TopicGraphRepository\";\nimport VoteGraphRepository from \"@infraestructure/repositories/vote/VoteGraphRepository\";\nimport DaiEthereumRepository from \"@infraestructure/repositories/currency/DaiEthereumRepository\";\n\n\nconst container = new Container();\n\ncontainer.bind<INewsRepository>(TYPES.INewsRepository).to(NewsGraphRepository);\ncontainer.bind<IWalletRepository>(TYPES.IWalletRepository).to(WalletRepository);\ncontainer.bind<IBlockchainRepository>(TYPES.IBlockchainRepository).to(EthereumRepository);\ncontainer.bind<ITopicRepository>(TYPES.ITopicRepository).to(TopicGraphRepository);\ncontainer.bind<IVoteRepository>(TYPES.IVoteRepository).to(VoteGraphRepository);\ncontainer.bind<ICurrencyRepository>(TYPES.IEthRepository).to(DaiEthereumRepository);\ncontainer.bind<ICurrencyRepository>(TYPES.IDaiRepository).to(DaiEthereumRepository);\ncontainer.bind<ICurrencyRepository>(TYPES.IGazzethRepository).to(DaiEthereumRepository);\n\ncontainer.bind<NewsService>(TYPES.NewsService).to(NewsService);\ncontainer.bind<WalletService>(TYPES.WalletService).to(WalletService);\ncontainer.bind<BlockchainService>(TYPES.BlockchainService).to(BlockchainService);\ncontainer.bind<TopicService>(TYPES.TopicService).to(TopicService);\ncontainer.bind<VoteService>(TYPES.VoteService).to(VoteService);\n\nexport { container }\n","import { makeStyles } from \"@material-ui/styles\";\n\nexport default makeStyles(theme => ({\n    metamask: {\n        height: \"1rem\",\n        width: \"1rem\",\n        borderRadius: \"1.125rem\",\n        backgroundColor: \"#888D9B\"\n    }\n}));\n","import React, { useRef, useEffect } from \"react\";\nimport useStyles from \"./styles\";\nimport { useSelector } from 'react-redux';\nimport { RootState } from \"@entrypoint/presenters/web/reducers/allReducers\";\nimport Jazzicon from 'jazzicon'\n\ntype Props = {\n    account: string\n}\n\nexport default function Icon({ account }: Props) {\n    const wallet = useSelector((state: RootState) => state.wallet.wallet);\n\n    switch(wallet.type) {\n        case \"metamask\":\n            return <MetamaskIcon account={account}/>\n        default:\n            return null;\n    }\n}\n\nfunction MetamaskIcon({ account }: Props) {\n    const ref = useRef<HTMLDivElement>()\n    const classes = useStyles();\n\n    useEffect(() => {\n      if (account && ref.current) {\n        ref.current.innerHTML = ''\n        ref.current.appendChild(Jazzicon(16, parseInt(account.slice(2, 10), 16)))\n      }\n    }, [account])\n  \n    return <div className={classes.metamask} ref={ref as any} />\n}\n","export default class Pagination {\n    public limit: number;\n    public offset: number;\n\n    constructor(limit: number, offset: number) {\n        this.limit = limit;\n        this.offset = offset;\n    }\n\n    public getCurrentPage(): number {\n        return (this.offset / this.limit);\n    }\n\n    public changePage(page: number): Pagination {\n        return new Pagination(this.limit, page * this.limit);\n    }\n\n    public changeLimit(limit: number): Pagination {\n        return new Pagination(limit, 0);\n    }\n\n    public advancePage(): Pagination {\n        return this.changePage(this.getCurrentPage() + 1);\n    }\n}\n","import React, { useEffect, useState } from \"react\";\nimport useStyles from \"./styles\";\nimport { useTranslation } from 'react-i18next';\nimport classnames from \"classnames\";\nimport { Button, Typography } from \"@material-ui/core\";\nimport BlockchainService from \"@configuration/usecases/BlockchainService\";\nimport { container } from \"@container-inversify\";\nimport { TYPES } from \"@constants/types\";\nimport { walletInfo } from \"@constants/supported_wallets\";\nimport Icon from \"../Icon/Icon\";\nimport FileCopyOutlinedIcon from '@material-ui/icons/FileCopyOutlined';\nimport ExitToAppOutlinedIcon from '@material-ui/icons/ExitToAppOutlined';\nimport NewsService from \"@configuration/usecases/NewsService\";\nimport Pagination from \"@domain/models/Pagination/Pagination\";\nimport NewsPreview from \"@domain/models/News/NewsPreview\";\nimport { Link } from \"react-router-dom\";\nimport { URLS } from \"@constants/urls\";\n\nconst blockchainService = container.get<BlockchainService>(TYPES.BlockchainService);\nconst newsService = container.get<NewsService>(TYPES.NewsService);\n\ntype Props = {\n    onChange: () => void,\n    wallet: walletInfo\n}\n\nexport default function AccountDetail({ onChange, wallet }: Props) {\n    const { t } = useTranslation();\n\n    const useActiveBlockchain = blockchainService.getBlockchainGetUseUseCase().getUseActive()\n    const [chain, account,] = useActiveBlockchain();\n    const [news, setNews] = useState<NewsPreview[]>([]);\n\n    const classes = useStyles();\n\n    const goToLink = () => {\n        const link = blockchainService.getBlockchainGetLinkUsecase().getLink(chain.id, account, \"address\")\n        window.open(link, '_blank');\n    }\n\n    const copyAddress = () => {\n        navigator.clipboard.writeText(account)\n    }\n\n    useEffect(() => {\n        newsService.getNewsListByAddressUsecase().listByAddress(new Pagination(0, 5), account)\n            .then((newsListResponce) => {\n                setNews(newsListResponce);\n                console.log(newsListResponce)\n            })\n            .catch((error) => console.log(error)) //TODO\n    }, [account])\n\n    const getUrl = (n: NewsPreview) => {\n        if (!n.isCommitOver()) {\n            return URLS.voteForm\n        }\n        else if (!n.isRevealOver()) {\n            return URLS.revealForm\n        }\n        return URLS.news\n    }\n\n    const getMessage = (n: NewsPreview) => {\n        if (!n.isCommitOver()) {\n            return \"go-to-vote\"\n        }\n        else if (!n.isRevealOver()) {\n            return \"go-to-reveal\"\n        }\n        return \"go-to-publication\"\n    }\n\n    return (\n        <>\n            <div className={classnames(classes.columnContainer, classes.borderContainer)}>\n                <div className={classnames(classes.rowContainer, classes.spaceBetween)}>\n                    <div className={classnames(classes.leftContainer, classes.text)}>\n                        <Typography variant=\"body2\">{t(\"connected-with\", { wallet: wallet.type })}</Typography>\n                    </div>\n                    <div className={classes.rightContainer}>\n                        <Button className={classes.buttonChange} onClick={onChange}>\n                            <Typography variant=\"body2\">{t(\"change\")}</Typography>\n                        </Button>\n                    </div>\n                </div>\n                <div className={classnames(classes.rowContainer, classes.start)}>\n                    <div className={classes.leftContainer}>\n                        <Icon account={account} />\n                    </div>\n                    <div className={classes.rightContainer}>\n                        <Typography className={classes.textAccount} variant=\"h4\">{blockchainService.getBlockchainGetAddressUsecase().shortenAddress(account)}</Typography>\n                    </div>\n                </div>\n                <div className={classnames(classes.rowContainer, classes.spaceBetween)}>\n                    <div className={classnames(classes.leftContainer, classes.text)}>\n                        <Button className={classes.button} onClick={copyAddress}>\n                            <FileCopyOutlinedIcon className={classes.text} />\n                            <Typography className={classes.text} variant=\"body2\">{t(\"copy-address\")}</Typography>\n                        </Button>\n                    </div>\n                    <div className={classes.rightContainer}>\n                        <Button className={classes.button} onClick={goToLink}>\n                            <ExitToAppOutlinedIcon className={classes.text} />\n                            <Typography className={classes.text} variant=\"body2\">{t(\"view-etherscan\")}</Typography>\n                        </Button>\n                    </div>\n                </div>\n            </div>\n            <div className={classnames(classes.columnContainer, classes.colorContainer)}>\n                <div className={classnames(classes.rowContainer, classes.newLine)}>\n                    <Typography variant=\"h5\">{t(\"publications-participate\")}</Typography>\n                </div>\n                {\n                    news.map(n => {\n\n                        return (\n                            <div className={classnames(classes.rowContainer, classes.spaceBetween)}>\n                                <div className={classes.leftContainer}>\n                                    <Typography className={classes.textAccount} variant=\"body2\">{n.title}</Typography>\n                                </div>\n                                <div className={classes.rightContainer}>\n                                    <Button className={classes.buttonChange} component={Link} to={getUrl(n).replace(\":id\", \"\"+n.id)}>\n                                        <Typography variant=\"body2\">{t(getMessage(n))}</Typography>\n                                    </Button>\n                                </div>\n                            </div>\n                        )\n                    })\n                }\n            </div>\n        </>\n    )\n}\n","export default __webpack_public_path__ + \"static/media/metamask.02e3ec27.png\";","import metamaskIcon from \"@assets/images/metamask.png\";\n\nexport type walletType = (\"metamask\")\n\nexport type walletInfo = {\n    type: walletType,\n    installLink: string,\n    icon: string\n}\n\nexport const SUPPORTED_WALLETS: { [key: string]: walletInfo } = {\n    METAMASK: { type: \"metamask\", installLink: \"https://metamask.io/\", icon: metamaskIcon },\n}\n","import { makeStyles } from \"@material-ui/styles\";\n\nexport default makeStyles(theme => ({\n    button: {\n        backgroundColor: \"#edeef2\",\n        textTransform: \"none\",\n        border: `1px solid #ced0d9`,\n        borderRadius: 20,\n\n        \"&$disabled\": {\n            color: \"#000000\"\n        }\n    },\n    buttonActive: {\n        backgroundColor: \"#ced0d9\",\n        \"&:hover\": {\n            backgroundColor: \"#ced0d9\"\n        }\n    },\n    disabled: {},\n    iconContainer: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        alignItems: \"flex-end\",\n    },\n    textContainer: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        alignItems: \"flex-start\",\n    },\n    container: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        minWidth: 400,\n        justifyContent: \"space-between\",\n        padding: \"0.75rem\"\n    },\n    image: {\n        height: \"24px\",\n        width: \"24px\",\n    }\n}));\n","import React from \"react\";\nimport useStyles from \"./styles\";\nimport { Button, Typography } from \"@material-ui/core\";\nimport clsx from 'clsx';\n\ntype Props = {\n    link?: string,\n    onClick?: () => void,\n    icon: string,\n    header: string,\n    subHeader?: string,\n    active?: boolean\n}\n\nexport default function Options({ link, onClick, icon, header, subHeader, active }: Props) {\n    const classes = useStyles();\n\n    const onClickButton = () => {\n        if (onClick) {\n            onClick();\n        }\n        if (link) {\n            window.open(link, '_blank');\n        }\n    }\n\n    return (\n        <Button className={clsx(classes.button, { [classes.buttonActive]: active })} classes={{ disabled: classes.disabled }} disabled={!onClick && !link} onClick={onClickButton}>\n            <div className={classes.container}>\n                <div className={classes.textContainer}>\n                    <Typography>{header}</Typography>\n                    {subHeader && <Typography>{subHeader}</Typography>}\n                </div>\n                <div className={classes.iconContainer}>\n                    <img src={icon} alt={'Icon'} className={classes.image} />\n                </div>\n            </div>\n        </Button>\n    )\n}","import { useEffect, useRef } from 'react'\n\nexport default function usePrevious<T>(value: T) {\n    const ref = useRef<T>()\n\n    useEffect(() => {\n        ref.current = value\n    }, [value])\n\n    return ref.current\n}\n","import walletActions from '@entrypoint/presenters/web/actions/walletActions';\n\nconst allActions = { walletActions }\n\nexport default allActions\n","import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport useStyles from \"./styles\";\nimport { useTranslation } from 'react-i18next';\nimport Modal from \"../Modal/Modal\";\nimport AccountDetail from \"../AccountDetail/AccountDetail\";\nimport { SUPPORTED_WALLETS, walletInfo } from \"@constants/supported_wallets\";\nimport Options from \"../Option/Options\";\nimport WalletService from \"@configuration/usecases/WalletService\";\nimport { container } from \"@container-inversify\";\nimport { TYPES } from \"@constants/types\";\nimport BlockchainService from \"@configuration/usecases/BlockchainService\";\nimport { Button, CircularProgress, Typography, Box } from \"@material-ui/core\";\nimport classnames from \"classnames\";\nimport { UnsupportedChainIdError } from \"@web3-react/core\";\nimport usePrevious from \"../../hooks/usePrevious\";\nimport { RootState } from \"@entrypoint/presenters/web/reducers/allReducers\";\nimport allActions from \"@entrypoint/presenters/web/actions/allActions\";\n\ntype Props = {\n    isOpen: boolean,\n    onClose: () => void,\n    onOpen: () => void\n}\n\nconst walletService = container.get<WalletService>(TYPES.WalletService);\nconst blockchainService = container.get<BlockchainService>(TYPES.BlockchainService);\n\nexport default function WalletModal({ isOpen, onClose, onOpen }: Props) {\n    const { t } = useTranslation();\n\n    const classes = useStyles();\n    const useBlockchain = blockchainService.getBlockchainGetUseUseCase().getUse()\n    const [active, account, , activate, error] = useBlockchain();\n\n\n    const wallet = useSelector((state: RootState) => state.wallet.wallet);\n    const dispatch = useDispatch();\n    const [state, setState] = useState<\"account\" | \"options\" | \"pending\">(\"options\")\n\n    const previousAccount = usePrevious(account)\n    const previousIsOpen = usePrevious(isOpen)\n    const previousError = usePrevious(error)\n\n    const onCloseWrapper = () => {\n        if (active) {\n            setState(\"account\")\n        }\n        else {\n            setState(\"options\")\n        }\n        onClose()\n    }\n\n    useEffect(() => {\n        if (account && !previousAccount) {\n            setState(\"account\")\n            if (isOpen) {\n                onClose()\n            }\n        }\n    }, [account, previousAccount, isOpen, onClose])\n\n    useEffect(() => {\n        if (!account && isOpen && !previousIsOpen && error === previousError) {\n            setState(\"options\")\n        }\n    }, [account, previousIsOpen, isOpen, error, previousError])\n\n    useEffect(() => {\n        if (!!error && error !== previousError) {\n            onOpen()\n            setState(\"pending\")\n        }\n    }, [error, previousError, onOpen])\n\n    const tryActivate = (option: walletInfo) => {\n        dispatch(allActions.walletActions.setWallet(option))\n        setState(\"pending\")\n        const connector = walletService.getWalletGetConnectorUseCase().getConnector(option.type)\n        activate(connector)\n    }\n\n    const getOptions = () => {\n        return Object.keys(SUPPORTED_WALLETS).map((key) => {\n            const option = SUPPORTED_WALLETS[key];\n\n            if (walletService.getWalletIsInstallUseCase().isInstall(option.type)) {\n                return <Options\n                    icon={option.icon}\n                    header={t(`${option.type}-header`)}\n                    onClick={() => tryActivate(option)} \n                    active={(wallet) ? wallet.type === option.type : false} />\n            }\n            else {\n                return <Options\n                    icon={option.icon}\n                    header={t(\"install\", { wallet: t(`${option.type}-header`) })}\n                    link={option.installLink} />\n            }\n        })\n    };\n\n    const getLoading = () => {\n        return (\n            <div className={classnames(classes.rowContainer, classes.borderContainer)}>\n                <div className={classes.leftContainer}>\n                    <CircularProgress size={24} />\n                </div>\n                <div className={classes.rightContainer}>\n                    <Typography>{t(\"loading-wallet\")}</Typography>\n                </div>\n            </div>\n        )\n    }\n\n    const getPendingView = () => {\n        return (\n            <>\n                {!!error ? ((error instanceof UnsupportedChainIdError) ? getError() : getErrorTryAgain()) : getLoading()}\n                <Options\n                    icon={wallet.icon}\n                    header={t(`${wallet.type}-header`)}\n                    subHeader={t(`${wallet.type}-subheader`)} />\n            </>\n        )\n    }\n\n    const getError = () => {\n        return (\n            <div className={classnames(classes.rowContainer, classes.errorContainer, classes.borderContainer)}>\n                <div className={classnames(classes.leftContainer, classes.errorText)}>\n                    <Typography>{t(\"error-chain\")}</Typography>\n                </div>\n            </div>\n        )\n    }\n\n    const getErrorTryAgain = () => {\n        return (\n            <div className={classnames(classes.rowContainer, classes.errorContainer, classes.borderContainer)}>\n                <div className={classnames(classes.leftContainer, classes.errorText)}>\n                    <Typography>{t(\"error-wallet\")}</Typography>\n                </div>\n                <div className={classes.rightContainer}>\n                    <Button className={classes.button} onClick={() => { tryActivate(wallet); }}>\n                        <Typography><Box fontWeight={500}>{t(\"try-again\")}</Box></Typography>\n                    </Button>\n                </div>\n            </div>\n        )\n    }\n\n    if (state === \"account\") {\n        return (\n            <Modal isOpen={isOpen} onClose={onCloseWrapper} title={t(\"account\")}>\n                <AccountDetail onChange={() => setState(\"options\")} wallet={wallet} />\n            </Modal>\n        )\n    }\n    else {\n        const title = active || state === \"pending\" ? \"back\" : \"wallet\"\n        const onClickTitle = () => {\n            if (active) {\n                setState(\"account\")\n            }\n            else {\n                dispatch(allActions.walletActions.setWallet(undefined))\n                setState(\"options\")\n            }\n        }\n        return (\n            <Modal isOpen={isOpen} onClose={onCloseWrapper} title={t(title)}\n                onClickTitle={onClickTitle}>\n                {state === \"options\" ? getOptions() : getPendingView()}\n            </Modal>\n        )\n    }\n}\n","import { makeStyles } from \"@material-ui/styles\";\nimport tinycolor from \"tinycolor2\";\n\nconst white = \"#FFFFFF\";\n\nexport default makeStyles(theme => ({\n    connectButton: {\n        backgroundColor: theme.palette.primary.main,\n        border: \"none\",\n        fontWeight: 500,\n        borderRadius: 20,\n        textTransform: \"none\",\n        \"&:hover\": {\n            border: `1px solid ${tinycolor(white)\n                .darken(50)\n                .toHexString()}`,\n            color: tinycolor(white)\n                .darken(50)\n                .toHexString()\n        },\n        \"&:focus\": {\n            border: `1px solid ${tinycolor(white)\n                .darken(50)\n                .toHexString()}`,\n        }\n    },\n    text: {\n        flex: \"1 1 auto\",\n        overflow: \"hidden\",\n        textOverflow: \"ellipsis\",\n        whiteSpace: \"nowrap\",\n        margin: \"0 0.5rem 0 0.25rem\",\n        fontSize: \"1rem\",\n        width: \"fit-content\",\n        fontWeight: 500,\n        color: white,\n    }\n}));","import i18n from 'i18next';\nimport Backend from 'i18next-http-backend';\nimport LanguageDetector from 'i18next-browser-languagedetector';\nimport { initReactI18next } from 'react-i18next';\n\nexport const languages = ['es', 'en'];\n\ni18n\n    .use(Backend)\n    .use(LanguageDetector)\n    .use(initReactI18next)\n    .init({\n        backend: {\n            loadPath: process.env.REACT_APP_PUBLIC_URL + \"/locales/{{lng}}/{{ns}}.json\",\n        },\n        fallbackLng: 'es',\n        debug: false,\n        supportedLngs: languages,\n        interpolation: {\n            escapeValue: false,\n        },\n    })\n\nexport default i18n;","import { makeStyles } from \"@material-ui/styles\";\n\nexport default makeStyles(theme => ({\n    button: {\n        textTransform: \"none\",\n        color: \"#FFFFFF\",\n        backgroundColor: theme.palette.primary.main,\n        borderRadius: 20,\n        border: `1px solid #FFFFFF`,\n        \"&:hover\": {\n            backgroundColor: theme.palette.primary.light\n        }\n    },\n    container: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        minWidth: 400,\n        justifyContent: \"space-between\",\n        padding: \"0rem\",\n        margin: \"0.2rem\"\n    },\n    buttonOption: {\n        textTransform: \"none\",\n        color: theme.palette.primary.main,\n        \"&:hover\": {\n            backgroundColor: \"#edeef2\"\n        }\n    }\n}));\n","import React, { useState } from \"react\";\nimport { Button, Typography } from \"@material-ui/core\";\nimport i18n, { languages } from \"./I18next\";\nimport { useTranslation } from 'react-i18next';\nimport useStyles from \"./styles\";\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Modal from \"../Modal/Modal\";\n\nexport default function SelectLanguage() {\n    const { t } = useTranslation();\n    const classes = useStyles();\n\n    const [isModalOpen, setIsModalOpen] = useState(false);\n\n    const onClose = () => { setIsModalOpen(false) }\n    const onOpen = () => { setIsModalOpen(true) }\n\n    return (\n        <>\n            <Button onClick={onOpen} component=\"span\" className={classes.button}>\n                <Typography variant=\"h6\">{t(i18n.language)}</Typography>\n                <ExpandMoreIcon />\n            </Button>\n            <Modal isOpen={isModalOpen} onClose={onClose} title={t(\"select-language\")}>\n                {/* TODO style={{ overflowY: 'auto', height: 'calc(100vh - 127px)' }} */}\n                <div>\n                    {\n                        languages.map((l: string) => {\n                            return (\n                                <div className={classes.container}>\n                                    <Button className={classes.buttonOption} onClick={() => { i18n.changeLanguage(l); onClose(); }}\n                                        disabled={l === i18n.language}>\n                                        <div className={classes.container}>\n                                            <Typography variant=\"h6\">{t(l)}</Typography>\n                                        </div>\n                                    </Button>\n                                </div>\n                            )\n                        })\n                    }\n                </div>\n            </Modal>\n        </>\n    )\n}","import React from \"react\";\nimport useStyles from \"./styles\";\nimport { useTranslation } from 'react-i18next';\nimport { container } from \"@container-inversify\";\nimport { TYPES } from \"@constants/types\";\nimport { Button, Typography } from \"@material-ui/core\";\nimport BlockchainService from \"@configuration/usecases/BlockchainService\";\nimport Icon from \"../Icon/Icon\";\nimport { Link } from \"react-router-dom\";\nimport { URLS } from \"@constants/urls\";\nimport SelectLanguage from \"../Translation/SelectLanguage\";\n\ntype Props = {\n    onClick: () => void\n}\n\nconst blockchainService = container.get<BlockchainService>(TYPES.BlockchainService);\n\nexport default function AccountStatus({ onClick }: Props) {\n    const { t } = useTranslation();\n\n    const classes = useStyles();\n    const useBlockchain = blockchainService.getBlockchainGetUseUseCase().getUse()\n    const [, account, , ,] = useBlockchain();\n\n    if (account) {\n        return (\n            <>\n                <Button className={classes.connectButton} component={Link} to={URLS.newsForm} >\n                    <Typography variant=\"h4\" className={classes.text}>{t(\"publish-news\")}</Typography>\n                </Button>\n                <Button className={classes.connectButton} component={Link} to={URLS.juryForm} >\n                    <Typography variant=\"h4\" className={classes.text}>{t(\"jurror-inscription\")}</Typography>\n                </Button>\n                <Button className={classes.connectButton} onClick={onClick} >\n                    <Typography variant=\"h4\" className={classes.text}>{blockchainService.getBlockchainGetAddressUsecase().shortenAddress(account)}</Typography>\n                    <Icon account={account} />\n                </Button>\n                <SelectLanguage />\n            </>\n        )\n    }\n    else {\n        return (\n            <>\n                <Button className={classes.connectButton} onClick={onClick} >\n                    <Typography variant=\"h4\" className={classes.text}>{t(\"connect-to-wallet\")}</Typography>\n                </Button>\n                <SelectLanguage />\n            </>\n        )\n    }\n}\n","import { useEffect, useState } from 'react'\nimport WalletService from \"@configuration/usecases/WalletService\";\nimport BlockchainService from \"@configuration/usecases/BlockchainService\";\nimport { useDispatch } from \"react-redux\";\nimport { SUPPORTED_WALLETS } from \"@constants/supported_wallets\";\nimport { container } from \"@container-inversify\";\nimport { TYPES } from \"@constants/types\";\nimport allActions from '../actions/allActions';\n\nconst walletService = container.get<WalletService>(TYPES.WalletService);\nconst blockchainService = container.get<BlockchainService>(TYPES.BlockchainService);\n\nexport default function useAuthorization() {\n  const useBlockchain = blockchainService.getBlockchainGetUseUseCase().getUse()\n  const [isAuthorized, , , activate,] = useBlockchain();\n  const dispatch = useDispatch();\n  const [loading, setLoading] = useState(false)\n  useEffect(() => {\n    const connector: any = walletService.getWalletGetConnectorUseCase().getConnector(\"metamask\")\n    connector.isAuthorized().then((isAuthorized: boolean) => {\n      if (isAuthorized) {\n        setLoading(true)\n        dispatch(allActions.walletActions.setWallet(SUPPORTED_WALLETS[\"METAMASK\"]))\n        activate(connector, undefined, true)\n          .then(() => {\n          })\n          .catch(() => {\n            dispatch(allActions.walletActions.setWallet(undefined))\n          })\n          .finally(() => {\n            setLoading(false)\n          })\n      }\n    })\n  }, [activate, dispatch])\n\n  return [isAuthorized, loading]\n}\n","import React, { useState } from \"react\";\nimport WalletModal from \"../WalletModal/WalletModal\";\nimport AccountStatus from \"../AccountStatus/AccountStatus\";\nimport useAuthorization from \"../../hooks/useAuthorization\";\n\n\nexport default function Wallet() {\n\n    const [isModalOpen, setIsModalOpen] = useState(false);\n\n    const changeIsModalOpen = () => setIsModalOpen((isModalOpen: boolean) => !isModalOpen);\n    const onOpen = () => setIsModalOpen(true);\n    const OnClose = () => setIsModalOpen(false);\n\n    useAuthorization();\n\n    return (\n        <div>\n            <AccountStatus onClick={changeIsModalOpen} />\n            <WalletModal isOpen={isModalOpen} onOpen={onOpen} onClose={OnClose} />\n        </div>\n    )\n}\n","import React from \"react\";\nimport { AppBar, Button, Toolbar } from \"@material-ui/core\";\nimport useStyles from \"./styles\";\nimport { Link } from 'react-router-dom';\nimport { URLS } from \"@constants/urls\";\nimport Wallet from \"../Wallet/Wallet\";\n\nconst logo = \"https://raw.githubusercontent.com/gazzeth/docs/master/logos/gzt_white.png\";\n\nexport default function Header() {\n\n    const classes = useStyles();\n\n    return (\n        <>\n            <AppBar position=\"fixed\" className={classes.appBar}>\n                <Toolbar className={classes.toolbar}>\n                    <Button className={classes.button} component={Link} to={URLS.home}>\n                        <div className={classes.logo}>\n                            <img src={logo} alt={'Icon'} className={classes.image} />\n                        </div>\n                    </Button>\n                    <Wallet />\n                </Toolbar>\n            </AppBar>\n        </>\n    );\n}\n","import React from \"react\";\nimport useStyles from \"./styles\";\nimport Header from \"@entrypoint/presenters/web/components/Header/Header\";\n\nexport default function withLayout(Component: React.ComponentType) {\n    return function ComponentWithLayout() {\n\n        const classes = useStyles();\n\n        return (\n            <>\n                <Header />\n                <div className={classes.extendToolbar} />\n                <Component />\n            </>\n        );\n    }\n}\n","import { makeStyles } from \"@material-ui/styles\";\n\nexport default makeStyles(theme => ({\n    rowContiner: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        justifyContent: \"center\",\n    }, \n    columnContiner: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        height: \"100vh\"\n    }\n}));","import React from \"react\";\nimport useStyles from \"./styles\";\nimport Error from \"@entrypoint/presenters/web/components/Error/Error\";\nimport useAuthorization from \"../../hooks/useAuthorization\";\nimport { CircularProgress } from \"@material-ui/core\";\n\nexport default function withAuthorization(Component: React.ComponentType) {\n    return function ComponentWithAuthorization() {\n\n        const classes = useStyles();\n\n        const [isAuthorized, loading] = useAuthorization()\n\n        if (loading) {\n            return (\n                <div className={classes.columnContiner}>\n                    <div className={classes.rowContiner}>\n                        <CircularProgress color=\"primary\" size={400} />\n                    </div>\n                </div>\n            )\n        }\n        if (isAuthorized) {\n            return (\n                <Component />\n            )\n        }\n        return (\n            <Error code={\"401\"} />\n        );\n    }\n}\n","import { makeStyles } from \"@material-ui/styles\";\n\nexport default makeStyles(theme => ({\n    root: {\n    },\n    gridContainer: {\n        justify:\"center\",\n    }\n}));\n","import { makeStyles } from \"@material-ui/styles\";\n\nexport default makeStyles(theme => ({\n    root: {\n        maxWidth: 345,\n        height: \"100%\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        \"& .MuiCardActions-root\": {\n            marginTop: \"auto\"\n        }\n    },\n    image: {\n        position: \"relative\",\n        height: 140,\n    },\n    statusBarIcon: {\n        color: 'white',\n        margin: 7\n    },\n    statusBar: {\n        color: 'white',\n        fontWeight: 'bold',\n        display: 'flex',\n        alignItems: 'center'\n    },\n    falseStatusBar: {\n        backgroundColor: theme.palette.status.false\n    },\n    pendingStatusBar: {\n        backgroundColor: theme.palette.status.pending\n    },\n    trueStatusBar: {\n        backgroundColor: theme.palette.status.true\n    },\n    unqualifiedStatusBar: {\n        backgroundColor: \"#e6ac00\"\n    }\n}));\n","import React from \"react\";\nimport useStyles from \"./styles\";\nimport { useTranslation } from 'react-i18next';\nimport classnames from \"classnames\";\nimport NewsPreview from \"@domain/models/News/NewsPreview\";\nimport { Button, Card, CardActionArea, CardActions, CardContent, CardMedia, Typography } from \"@material-ui/core\";\nimport CheckIcon from '@material-ui/icons/Check';\nimport ErrorOutlineOutlinedIcon from '@material-ui/icons/ErrorOutlineOutlined';\nimport CancelOutlinedIcon from '@material-ui/icons/CancelOutlined';\nimport ReportProblemOutlinedIcon from '@material-ui/icons/ReportProblemOutlined';\nimport { Link } from 'react-router-dom';\nimport { URLS } from \"@constants/urls\";\nimport { VOTE_VALUE } from \"@constants/vote_value\";\n\ninterface PropTypes {\n    News: NewsPreview;\n}\n\nexport default function NewsCard(props: PropTypes) {\n    let news = props.News;\n\n    const { t } = useTranslation();\n    const classes = useStyles();\n\n    const MAX_LEDE = 500;\n\n    const getStatusBar = () => {\n        switch (news.verified) {\n            case VOTE_VALUE.None:\n                return (\n                    <div className={classnames(classes.statusBar, classes.pendingStatusBar)}>\n                        <ErrorOutlineOutlinedIcon className={classes.statusBarIcon} />\n                        <span>{t(\"pending-status-bar-description\")}</span>\n                    </div>\n                );\n            case VOTE_VALUE.True:\n                return (\n                    <div className={classnames(classes.statusBar, classes.trueStatusBar)}>\n                        <CheckIcon className={classes.statusBarIcon} />\n                        <span>{t(\"true-status-bar-description\")}</span>\n                    </div>\n                );\n            case VOTE_VALUE.False:\n                return (\n                    <div className={classnames(classes.statusBar, classes.falseStatusBar)}>\n                        <CancelOutlinedIcon className={classes.statusBarIcon} />\n                        <span>{t(\"false-status-bar-description\")}</span>\n                    </div>\n                );\n            case VOTE_VALUE.Unqualified:\n                return ( \n                    <div className={classnames(classes.statusBar, classes.unqualifiedStatusBar)}>\n                        <ReportProblemOutlinedIcon className={classes.statusBarIcon} />\n                        <span>{t(\"unqualified-status-bar-description\")}</span>\n                    </div>\n                );\n        }\n    }\n\n    if (news.lede.length > MAX_LEDE) {\n        const shortLede = news.lede.substring(0, MAX_LEDE).replace(/[\\W]*\\S+[\\W]*$/, '...');\n        news = news.setLede(shortLede)\n    }\n\n    return (\n        <Card className={classes.root}>\n            <CardActionArea>\n                <CardMedia component=\"img\" className={classes.image} image={news.image} />\n                {getStatusBar()}\n                <CardContent>\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">{news.title}</Typography>\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">{news.lede}</Typography>\n                </CardContent>\n            </CardActionArea>\n            <CardActions>\n                <Button size=\"small\" color=\"primary\" component={Link} to={URLS.news.replace(\":id\", `${news.id}`)}>{t(\"see-more\")}</Button>\n            </CardActions>\n        </Card>\n    )\n}\n","import { VOTE_VALUE } from \"@constants/vote_value\";\n\nexport default class NewsFilter {\n    public verified?: VOTE_VALUE;\n    public topic?: string;\n\n    constructor(verified?: VOTE_VALUE, topic?: string) {\n        this.verified = verified;\n        this.topic = topic;\n    }\n\n    setVerified(verified?: VOTE_VALUE) {\n        return new NewsFilter(verified, this.topic);\n    }\n\n    setTopic(topic: string) {\n        return new NewsFilter(this.verified, topic);\n    }\n}\n","import { makeStyles } from \"@material-ui/styles\";\n\nexport default makeStyles(theme => ({\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 250,\n    },\n    rowContainer: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        justifyContent: \"flex-start\",\n        padding: \"1.1rem\",\n        \"& .MuiOutlinedInput-root\": {\n            borderRadius: 15,\n        },\n        \"& .MuiOutlinedInput-notchedOutline\": {\n            borderRadius: 15,\n        },\n    },\n    paper: {\n        boxShadow: theme.customShadows.widgetDark,\n        display: \"flex\",\n        alignItems: \"center\",\n        flexDirection: \"column\",\n        borderRadius: 20,\n        minWidth: \"600px\"\n    },\n}));\n","import React, { useEffect, useState } from \"react\";\nimport useStyles from \"./styles\";\nimport { useTranslation } from 'react-i18next';\nimport NewsFilter from \"@domain/models/Filter/NewsFilter\";\nimport { InputLabel, FormControl, Paper, Select, Typography, Container } from \"@material-ui/core\";\nimport { VOTE_VALUE, VOTE_VALUES } from \"@constants/vote_value\";\nimport Topic from \"@domain/models/Topic/Topic\";\nimport TopicService from \"@configuration/usecases/TopicService\";\nimport { container } from \"@container-inversify\";\nimport { TYPES } from \"@constants/types\";\n\nconst topicService = container.get<TopicService>(TYPES.TopicService);\n\ninterface PropTypes {\n    filter: NewsFilter,\n    onChange: (filter: NewsFilter) => void\n}\n\nexport default function NewsFilterBar({ filter, onChange }: PropTypes) {\n    const { t } = useTranslation();\n    const classes = useStyles();\n\n    const handleVerifiedChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n        let value = event.target.value;\n        if (value === \"\") {\n            value = undefined;\n        }\n        onChange(filter.setVerified(value as (VOTE_VALUE | undefined)));\n    }\n\n    const handleTopicChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n        let value = event.target.value;\n        if (value === \"\") {\n            value = undefined;\n        }\n        onChange(filter.setTopic(value as (string | undefined)));\n    }\n\n    const [topics, setTopics] = useState<Topic[]>([])\n\n    useEffect(() => {\n        topicService.getTopicListUseCase().list(undefined)\n            .then((topics) => setTopics(topics))\n            .catch((error) => console.log(error)) //TODO\n    }, [])\n\n    return (\n        <Paper className={classes.paper}>\n            <Container fixed>\n                <Typography variant=\"h5\">{t(\"filter-bar-title\")}</Typography>\n                <div className={classes.rowContainer}>\n                    <FormControl variant=\"outlined\" className={classes.formControl}>\n                        <InputLabel>{t(\"verified-title\")}</InputLabel>\n                        <Select native value={filter.verified} label={t(\"verified-title\")}\n                            onChange={handleVerifiedChange}>\n                            <option aria-label=\"None\" value={undefined} />\n                            {\n                                VOTE_VALUES.map((voteValue) => {\n                                    return <option value={voteValue}>{t(\"vote-state-value-\" + voteValue)}</option>\n                                })\n                            }\n                        </Select>\n                    </FormControl>\n                    <FormControl variant=\"outlined\" className={classes.formControl}>\n                        <InputLabel>{t(\"select-topic\")}</InputLabel>\n                        <Select native value={filter.verified} label={t(\"select-topic\")}\n                            onChange={handleTopicChange}>\n                            <option aria-label=\"None\" value={undefined} />\n                            {\n                                topics.map((topic) => {\n                                    return <option value={topic.name}>{topic.name}</option>\n                                })\n                            }\n                        </Select>\n                    </FormControl>\n                </div>\n            </Container>\n        </Paper>\n    );\n}\n","import { useEffect, useState } from \"react\";\nimport Pagination from \"@domain/models/Pagination/Pagination\";\nimport Filter from \"@domain/models/Filter/NewsFilter\";\nimport NewsPreview from \"@domain/models/News/NewsPreview\";\n\nconst useInfiniteScrolling = (getPage: (handleNewList: ((newsList: NewsPreview[]) => void),\n    pagination: Pagination, filter: Filter) => void, filter: Filter, pageSize: number):\n    [boolean, Pagination, Filter, (f: Filter) => void, NewsPreview[]] => {\n\n    const [newsList, setNewList] = useState<NewsPreview[]>([]);\n    const [pageState, setPageState] = useState({\n        pagination: new Pagination(pageSize, 0),\n        filter: filter,\n        loading: true\n    })\n    const setFilter = (f: Filter) => {\n        setPageState({\n            ...pageState,\n            filter: f,\n        })\n    }\n\n    useEffect(() => {\n        const defaultPagination = new Pagination(pageSize, 0)\n        getPage((newsListResponce) => {\n            setNewList(newsListResponce);\n            setPageState(p => {\n                return {\n                    ...p,\n                    pagination: defaultPagination,\n                    loading: false\n                }\n            })\n        }, defaultPagination, pageState.filter);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [pageState.filter]);\n\n    useEffect(() => {\n        const handleScroll = () => {\n            setPageState(p => {\n                if ((window.innerHeight + window.scrollY) >= document.body.offsetHeight && !p.loading) {\n                    const newPagination = p.pagination.advancePage();\n                    getPage((newsListResponce) => {\n                        setNewList(n => [...n, ...newsListResponce]);\n                        setPageState(p => { return { ...p, loading: false } });\n                    },\n                        newPagination, p.filter);\n                    return {\n                        ...p,\n                        pagination: newPagination,\n                        loading: true,\n                    }\n                }\n                return p;\n            })\n\n        }\n\n        window.addEventListener('scroll', handleScroll);\n        return () => window.removeEventListener('scroll', handleScroll);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    return [pageState.loading, pageState.pagination, pageState.filter, setFilter, newsList]\n}\n\nexport default useInfiniteScrolling;\n","import React from \"react\";\nimport useStyles from \"./styles\";\nimport { container } from \"@container-inversify\";\nimport NewsPreview from \"@domain/models/News/NewsPreview\";\nimport NewsCard from \"@entrypoint/presenters/web/components/NewsCard/NewsCard\";\nimport { TYPES } from \"@constants/types\";\nimport NewsService from \"@configuration/usecases/NewsService\";\nimport Pagination from \"@domain/models/Pagination/Pagination\";\nimport Filter from \"@domain/models/Filter/NewsFilter\";\nimport { CircularProgress, Container, Grid } from '@material-ui/core'\nimport NewsFilterBar from \"../NewsFilterBar/NewsFilterBar\";\nimport useInfiniteScrolling from \"../../hooks/useInifiniteScrolling\";\n\nconst newsService = container.get<NewsService>(TYPES.NewsService);\n\nexport default function NewsList() {\n    const PAGE_SIZE = 5; //TODO maybe put in constnants?\n\n    const getPage = async (handleNewList: ((newsList: NewsPreview[]) => void),\n        pagination: Pagination, filter: Filter) => {\n        newsService.getNewsListUseCase().list(pagination, filter)\n            .then((newsListResponce) => {\n                handleNewList(newsListResponce);\n            })\n            .catch((error) => console.log(error)) //TODO\n    }\n\n    const classes = useStyles();\n    const [loading, , filter, setFilter, newsList] = useInfiniteScrolling(getPage, new Filter(), PAGE_SIZE)\n\n\n    return (\n        <Container maxWidth={false}>\n            <Grid container className={classes.gridContainer} spacing={2} alignItems=\"stretch\">\n                <Grid item />\n                <Grid item xs={12}>\n                    <NewsFilterBar filter={filter} onChange={(f) => setFilter(f)} />\n                </Grid>\n            </Grid>\n            <Grid container direction=\"column\" className={classes.gridContainer} spacing={3}>\n                <Grid item>\n                    <Grid container justify=\"center\" direction=\"row-reverse\" className={classes.gridContainer} spacing={3}>\n                        {newsList.map(news => <Grid item><NewsCard News={news} /></Grid>)}\n                    </Grid>\n                </Grid>\n            </Grid>\n            <Grid container direction=\"column\" className={classes.gridContainer} spacing={3}>\n                <Grid item>\n                    <Grid container justify=\"center\" className={classes.gridContainer} spacing={3}>\n                        {loading && <Grid item><CircularProgress color=\"primary\" size={200} /></Grid>}\n                    </Grid>\n                </Grid>\n            </Grid>\n        </Container>\n    )\n}\n","import { makeStyles } from \"@material-ui/styles\";\n\nexport default makeStyles(theme => ({\n    containerSpinner: {\n        display: 'flex',\n        width: '100%',\n        justifyContent: 'center',\n        height: 'auto',\n        alignItems: 'center',\n        marginTop: '5%',\n        minHeight: '500px',\n    },\n    spinner: {\n        width: '20%'\n    },\n}));","import { makeStyles } from \"@material-ui/styles\";\n\nexport default makeStyles(theme => ({\n    rowContainer: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        justifyContent: \"center\",\n        paddingTop: \"1.1rem\",\n        paddingBottom: \"1.1rem\",\n        marginLeft: \"15rem\",\n        marginRight: \"15rem\",\n        \"& .MuiOutlinedInput-root\": {\n            borderRadius: 15,\n        },\n        \"& .MuiOutlinedInput-notchedOutline\": {\n            borderRadius: 15,\n        },\n    },\n    container: {\n        padding: \"1.1rem\"\n    }\n}));\n","import React from \"react\";\nimport useStyles from \"./styles\";\nimport ReactMarkdown from 'react-markdown';\nimport gfm from 'remark-gfm';\nimport Container from \"../Container/Container\";\n\ntype Props = {\n    children: string\n}\n\nexport default function NewsRender({ children }: Props) {\n\n    const classes = useStyles();\n\n    const renderers = {\n        image: (props: any) => {\n            return (\n                <img alt={props.alt} src={props.src} title={props.title} style={{ width: \"100%\" }} />\n            )\n        },\n    }\n\n    return (\n        <div className={classes.rowContainer}>\n            <Container>\n                <div className={classes.container}>\n                    <ReactMarkdown remarkPlugins={[gfm]} components={{ img: renderers.image }}>{children}</ReactMarkdown>\n                </div>\n            </Container>\n        </div>\n    )\n}\n","import { makeStyles } from \"@material-ui/styles\";\n\nexport default makeStyles(theme => ({\n    root: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        justifyContent: \"center\",\n        paddingTop: \"1.1rem\",\n        paddingBottom: \"1.1rem\",\n        marginLeft: \"15rem\",\n        marginRight: \"15rem\",\n        \"& .MuiOutlinedInput-root\": {\n            borderRadius: 15,\n        },\n        \"& .MuiOutlinedInput-notchedOutline\": {\n            borderRadius: 15,\n        },\n    },\n    rowContainer: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        justifyContent: \"space-between\",\n        padding: \"1.1rem\",\n        marginLeft: \"1rem\",\n        marginRight: \"1rem\",\n        backgroundColor: \"#edeef2\",\n        border: `1px solid #ced0d9`,\n        borderRadius: 20,\n        minWidth:\"700px\"\n    },\n    leftContainer: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        alignItems: \"flex-start\",\n    },\n    rightContainer: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        alignItems: \"flex-end\",\n    },\n    button: {\n        textTransform: \"none\",\n        color: theme.palette.primary.main,\n        borderRadius: 20,\n        border: `1px solid ${theme.palette.primary.main}`,\n        \"&:hover\": {\n            backgroundColor: \"none\",\n            textDecoration: \"underline\"\n        }\n    },\n    buttonProgress: {\n        color:  theme.palette.primary.light,\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        marginTop: -12,\n        marginLeft: -12,\n    },\n}));\n","import React from \"react\";\nimport Vote from \"@domain/models/Vote/Vote\";\nimport useStyles from \"./styles\";\nimport Container from \"../Container/Container\";\nimport { Button, CircularProgress, Typography } from \"@material-ui/core\";\nimport { useTranslation } from 'react-i18next';\nimport Chart from 'react-apexcharts'\nimport { container } from \"@container-inversify\";\nimport { TYPES } from \"@constants/types\";\nimport BlockchainService from \"@configuration/usecases/BlockchainService\";\nimport NewsService from \"@configuration/usecases/NewsService\";\nimport { toast } from 'react-toastify';\n\nconst blockchainService = container.get<BlockchainService>(TYPES.BlockchainService);\nconst newsService = container.get<NewsService>(TYPES.NewsService);\n\ntype Props = {\n    votes: Vote[]\n    id?: number\n}\n\nexport default function Votation({ votes, id }: Props) {\n\n    const classes = useStyles();\n    const { t } = useTranslation();\n\n    const useActiveBlockchain = blockchainService.getBlockchainGetUseUseCase().getUseActive()\n    const [, , , library] = useActiveBlockchain();\n\n    const getState = (v: Vote) => {\n        if (v.penalized) {\n            return t('penalized')\n        }\n        return t(\"vote-value-\" + v.value)\n    }\n\n    const series: { name: string, data: number[] }[] = [];\n    votes.forEach(v => {\n        let isFound = false;\n        for (let i = 0; i < series.length; i++) {\n            const serie = series[i];\n            if (serie.name === getState(v)) {\n                serie.data[0] = serie.data[0] + 1;\n                isFound = true\n                break;\n            }\n        }\n        if (!isFound) {\n            series.push({ name: getState(v), data: [1] })\n        }\n    })\n\n    const seriesSorted = series.sort((n1, n2) => n2.data[0] - n1.data[0])\n\n    const getColor = (n: { name: string, data: number[] }) => { //TODO\n        switch (n.name) {\n            case t('penalized'): return \"#000000\";\n            case t(\"vote-value-0\"): return \"#808080\";\n            case t(\"vote-value-1\"): return \"#008000\";\n            case t(\"vote-value-2\"): return \"#FF0000\";\n            case t(\"vote-value-3\"): return \"#e6ac00\";\n        }\n    }\n\n    const state: any = {\n        series: seriesSorted,\n        options: {\n            colors: seriesSorted.map((n) => getColor(n)),\n            chart: {\n                type: \"bar\",\n                stacked: true,\n                stackType: '100%'\n            },\n            plotOptions: {\n                bar: {\n                    horizontal: true,\n                },\n            },\n            stroke: {\n                width: 1,\n                colors: ['#fff']\n            },\n            xaxis: {\n                floating: true,\n                axisTicks: {\n                    show: false\n                },\n                axisBorder: {\n                    show: false\n                },\n                labels: {\n                    show: false\n                },\n            },\n            yaxis: {\n                floating: true,\n                axisTicks: {\n                    show: false\n                },\n                axisBorder: {\n                    show: false\n                },\n                labels: {\n                    show: false\n                },\n            },\n            tooltip: {\n                enabled: false,\n                y: {\n                    show: false\n                },\n                x: {\n                    show: false\n                }\n            },\n            fill: {\n                opacity: 1\n            },\n            legend: {\n                show: true,\n                showForSingleSeries: true,\n                position: 'top',\n                horizontalAlign: 'left',\n                offsetX: 40,\n                onItemClick: {\n                    toggleDataSeries: false\n                }\n            }\n        },\n    };\n\n    const [loading, setLoading] = React.useState(false);\n\n    const onChange = () => {\n        setLoading(true)\n        newsService.getNewsWithdrawUsecase().withdraw(id, library)\n            .then(() => toast.success(t(\"succesful-withdraw\")))\n            .catch((error: Error) => toast.error(t(error.message)))\n            .finally(() => setLoading(false))\n    }\n\n    return (\n        <>\n            <div className={classes.root} >\n                <Container title={t(\"votation\")} titleVariant={\"h2\"}>\n                    <Chart options={state.options} series={state.series} type=\"bar\" height={170} width={700} />\n                </Container>\n            </div>\n            <div className={classes.root} >\n                <Container title={t(\"votes\")} titleVariant={\"h2\"} icon={id !== undefined ? (\n                    <Button className={classes.button} onClick={onChange} disabled={loading} style={{ position: 'relative', }}>\n                        <Typography variant=\"body2\">{t(\"withdraw\")}</Typography>\n                        {loading && <CircularProgress size={24} className={classes.buttonProgress} />}\n                    </Button>\n                ) : undefined}>\n                    {\n                        votes.map(v => {\n                            return (\n                                <div className={classes.rowContainer}>\n                                    <div className={classes.leftContainer}>\n                                        <Typography>{v.address}</Typography>\n                                        {v.justification !== \"\" && <Typography>{v.justification}</Typography>}\n                                    </div>\n                                    <div className={classes.rightContainer}>\n                                        <Typography>{getState(v)}</Typography>\n                                    </div>\n                                </div>\n                            )\n                        })\n                    }\n                </Container>\n            </div >\n        </>\n    )\n}\n","import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useTranslation } from 'react-i18next';\nimport News from \"@domain/models/News/News\";\nimport useStyles from \"./styles\";\nimport { container } from \"@container-inversify\";\nimport { TYPES } from \"@constants/types\";\nimport NewsService from \"@configuration/usecases/NewsService\";\nimport { CircularProgress, Container, Typography } from \"@material-ui/core\";\nimport NewsRender from \"../NewsRender/NewsRender\";\nimport Votation from \"../Votation/Votation\";\nimport { VOTE_VALUE } from \"@constants/vote_value\";\n\nconst newsService = container.get<NewsService>(TYPES.NewsService);\n\nexport default function NewsPage() {\n    const { t } = useTranslation();\n\n    const { id } = useParams<{ id: string }>();\n    const idNumber = Number(id)\n\n    const classes = useStyles();\n\n    const [news, setNews] = useState<News>(undefined);\n    const [loading, setLoading] = useState<boolean>(true);\n\n    useEffect(() => {\n        if (!isNaN(idNumber)) {\n            newsService.getNewsGetUseCase().get(idNumber)\n                .then((newsResponce) => setNews(newsResponce))\n                .catch((error) => console.log(error))//TODO maybe do somethin else\n                .finally(() => setLoading(false))\n        }\n    }, [idNumber])\n\n    if (isNaN(idNumber) || (loading === false && news === undefined)) {\n        return <>404 para el id:{id}</>//TODO render 404\n    }\n    if (loading === true) {\n        return (\n            <div className={classes.containerSpinner}>\n                <CircularProgress className={classes.spinner} size=\"10\" />\n            </div>\n        );\n    }\n\n    const getStatusMessage = (n: News) => {\n        let message, backColor, color;\n        if (!n.isRevealOver()) {\n            return null\n        }\n        switch (n.verified) {\n            case VOTE_VALUE.True:\n                message = \"news-status-message-0\"\n                backColor = \"#008000\"\n                color = \"#FFFFFF\"\n                break;\n            case VOTE_VALUE.False:\n                message = \"news-status-message-1\"\n                backColor = \"#FF0000\"\n                color = \"#FFFFFF\"\n                break;\n            case VOTE_VALUE.Unqualified:\n                message = \"news-status-message-2\"\n                backColor = \"#e6ac00\"\n                color = \"#FFFFFF\"\n                break;\n            default:\n                message = \"news-status-message-3\"\n                backColor = \"#000000\"\n                color = \"#FFFFFF\"\n        }\n        return (\n            <div style={{ backgroundColor: backColor, width: \"100%\", padding: \"1rem\", color: color }}>\n                <Typography variant=\"body2\" >{t(message)}</Typography>\n            </div>\n        )\n    }\n\n    return (\n        <>\n            {getStatusMessage(news)}\n            <Container maxWidth={false}>\n                <NewsRender>{news.content}</NewsRender>\n                {news.isRevealOver() && <Votation votes={news.votes} id={!news.withdraw ? news.id : undefined} />}\n            </Container>\n        </>\n    )\n}\n","import { makeStyles } from \"@material-ui/styles\";\n\nexport default makeStyles(theme => ({\n    button: {\n        textTransform: \"none\",\n        color: theme.palette.primary.main,\n        borderRadius: 15,\n        border: `1px solid ${theme.palette.primary.main}`,\n        \"&:hover\": {\n            backgroundColor: \"none\",\n            textDecoration: \"underline\"\n        }\n    },\n    textContainer: {\n        border: `1px solid #000000`,\n        borderRadius: 15,\n        paddingLeft: \"0.5rem\",\n        paddingRight: \"0.5rem\",\n        paddingTop: \"0.375rem\",\n        paddingBottom: \"0.375rem\",\n        marginRight: \"1rem\"\n    },\n    text: {\n        color: \"#000000\",\n    },\n    rowContainer: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        justifyContent: \"center\",\n        padding: \"1.1rem\",\n        \"& .MuiOutlinedInput-root\": {\n            borderRadius: 15,\n        },\n        \"& .MuiOutlinedInput-notchedOutline\": {\n            borderRadius: 15,\n        },\n    },\n    buttonPublish: {\n        textTransform: \"none\",\n        color: \"#FFFFFF\",\n        backgroundColor: theme.palette.primary.main,\n        borderRadius: 15,\n        border: `1px solid ${theme.palette.primary.main}`,\n        width: \"100%\",\n        \"&:hover\": {\n            backgroundColor: theme.palette.primary.light\n        },\n        \"&.MuiButton-root.Mui-disabled\": {\n            backgroundColor: \"#FFFFFF\",\n            border: \"none\"\n        }\n    },\n    buttonProgress: {\n        color:  theme.palette.primary.light,\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        marginTop: -12,\n        marginLeft: -12,\n    },\n}));\n","import { makeStyles } from \"@material-ui/styles\";\n\nexport default makeStyles(theme => ({\n    button: {\n        textTransform: \"none\",\n        color: \"#FFFFFF\",\n        backgroundColor: theme.palette.primary.main,\n        borderRadius: 15,\n        border: `1px solid ${theme.palette.primary.main}`,\n        \"&:hover\": {\n            backgroundColor: theme.palette.primary.light\n        }\n    },\n    buttonSelected: {\n        textTransform: \"none\",\n        color: theme.palette.primary.main,\n        borderRadius: 15,\n        border: `1px solid ${theme.palette.primary.main}`,\n        backgroundColor: \"#FFFFFF\",\n        \"&:hover\": {\n            backgroundColor: \"#edeef2\",\n        }\n    },\n    container: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        minWidth: 400,\n        justifyContent: \"space-between\",\n        padding: \"0rem\",\n        margin: \"0.2rem\"\n    },\n    buttonOption: {\n        textTransform: \"none\",\n        color: theme.palette.primary.main,\n        \"&:hover\": {\n            backgroundColor: \"#edeef2\"\n        }\n    }\n}));\n","import React, { useState, useEffect } from \"react\";\nimport useStyles from \"./styles\";\nimport { useTranslation } from 'react-i18next';\nimport { Button, Typography } from \"@material-ui/core\";\nimport Modal from \"../Modal/Modal\";\nimport Topic from \"@domain/models/Topic/Topic\";\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport TopicService from \"@configuration/usecases/TopicService\";\nimport { container } from \"@container-inversify\";\nimport { TYPES } from \"@constants/types\";\nimport clsx from 'clsx';\n\nconst topicService = container.get<TopicService>(TYPES.TopicService);\n\ntype Props = {\n    selectedOption?: Topic,\n    onChange: (t: Topic) => void,\n}\n\nexport default function SelectTopic({ selectedOption, onChange }: Props) {\n    const { t } = useTranslation();\n    const classes = useStyles();\n\n    const [isModalOpen, setIsModalOpen] = useState(false);\n\n    const onClose = () => { setIsModalOpen(false) }\n    const onOpen = () => { setIsModalOpen(true) }\n\n    const [topics, setTopics] = useState<Topic[]>([])\n\n    useEffect(() => {\n        topicService.getTopicListUseCase().list(undefined)\n            .then((topics) => setTopics(topics))\n            .catch((error) => console.log(error)) //TODO\n    }, [])\n\n    return (\n        <>\n            <Button onClick={onOpen} component=\"span\" className={clsx(classes.button, { [classes.buttonSelected]: selectedOption })}>\n                <Typography variant=\"h6\">{selectedOption ? selectedOption.name : t(\"select-topic\")}</Typography>\n                <ExpandMoreIcon />\n            </Button>\n            <Modal isOpen={isModalOpen} onClose={onClose} title={t(\"select-topic\")}>\n            {/* TODO style={{ overflowY: 'auto', height: 'calc(100vh - 127px)' }} */}\n                <div> \n                    {\n                        topics.map((t: Topic) => {\n                            return (\n                                <div className={classes.container}>\n                                    <Button className={classes.buttonOption} onClick={() => { onChange(t); onClose(); }}\n                                        disabled={selectedOption && t.name === selectedOption.name}>\n                                        <div className={classes.container}>\n                                            <Typography variant=\"h6\">{t.name}</Typography>\n                                        </div>\n                                    </Button>\n                                </div>\n                            )\n                        })\n                    }\n                </div>\n            </Modal>\n        </>\n    )\n}","import { makeStyles } from \"@material-ui/styles\";\n\nexport default makeStyles(theme => ({\n    columnEnd: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        alignItems: \"flex-end\",\n    },\n    columnStart: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        alignItems: \"flex-start\",\n    },\n    container: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        minWidth: 400,\n        justifyContent: \"space-between\",\n        padding: \"0.75rem\",\n        border: `1px solid #edeef2`,\n        borderRadius: 20,\n        backgroundColor: \"#f7f8fa\",\n    },\n    image: {\n        height: \"24px\",\n        width: \"24px\",\n        marginRight: \"0.5rem\"\n    },\n    containerBorder: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        justifyContent: \"flex-start\",\n        alignItems: \"center\",\n        boxShadow: \"rgba(0, 0, 0, 0.075) 0px 6px 10px\",\n        backgroundColor: \"#FFFFFF\",\n        borderRadius: 20,\n        paddingLeft: \"0.5rem\",\n        paddingRight: \"0.5rem\",\n        marginBottom: \"0.5rem\"\n    }\n}));\n","export enum SUPPORTED_CURRENCY {\n    Eth,\n    Dai,\n    Gazzeth,\n}\n","import React, { useEffect, useState } from \"react\";\nimport useStyles from \"./styles\";\nimport { useTranslation } from 'react-i18next';\nimport { Typography } from \"@material-ui/core\";\nimport { container } from \"@container-inversify\";\nimport { TYPES } from \"@constants/types\";\nimport BlockchainService from \"@configuration/usecases/BlockchainService\";\nimport { SUPPORTED_CURRENCY } from \"@constants/supported_currency\";\nimport { Web3Provider } from '@ethersproject/providers'\n\ntype Props = {\n    lockCost: number,\n    library: Web3Provider,\n    account: string\n}\n\nconst blockchainService = container.get<BlockchainService>(TYPES.BlockchainService);\n\nexport default function LockInfo({ lockCost, library, account }: Props) {\n    const classes = useStyles();\n    const { t } = useTranslation();    \n    const [balance, setBalance] = useState(\"-\")\n    const daiIcon = \"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0x6B175474E89094C44Da98b954EedeAC495271d0F/logo.png\"\n\n    useEffect(() => {\n        blockchainService\n            .getBlockchainGetBalanceOfUsecase()\n            .getBalanceOf(SUPPORTED_CURRENCY.Dai, library)\n            .then((balance) => {\n                setBalance(\"\" + balance)\n            })\n    }, [library, account])\n    \n    return (\n        <div className={classes.container}>\n            <div className={classes.columnStart}>\n                <div className={classes.containerBorder}>\n                    <img src={daiIcon} alt={'Icon'} className={classes.image} />\n                    <Typography variant=\"h6\">DAI</Typography>\n                </div>\n                <Typography variant=\"body2\">{t(\"balance\", { value: `${balance} DAI` })}</Typography>\n            </div>\n            <div className={classes.columnEnd}>\n                <Typography variant=\"h4\">{lockCost}</Typography>\n            </div>\n        </div>\n    )\n}\n","import React, { Fragment, useState } from \"react\";\nimport useStyles from \"./styles\";\nimport { useTranslation } from 'react-i18next';\nimport { Button, Checkbox, FormControlLabel, Typography } from \"@material-ui/core\";\nimport Topic from \"@domain/models/Topic/Topic\";\nimport SelectTopic from \"../SelectTopic/SelectTopic\";\nimport Container from \"../Container/Container\";\nimport LockInfo from \"../LockInfo/LockInfo\";\nimport NewsService from \"@configuration/usecases/NewsService\";\nimport { container } from \"@container-inversify\";\nimport { TYPES } from \"@constants/types\";\nimport News from \"@domain/models/News/News\";\nimport NewsRender from \"../NewsRender/NewsRender\";\nimport BlockchainService from \"@configuration/usecases/BlockchainService\";\nimport { toast } from 'react-toastify';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst newsService = container.get<NewsService>(TYPES.NewsService);\nconst blockchainService = container.get<BlockchainService>(TYPES.BlockchainService);\n\nexport default function NewsForm() {\n    const { t } = useTranslation();\n    const classes = useStyles();\n\n    const [news, setNews] = useState<{ content: string, topic: Topic }>({ content: undefined, topic: undefined });\n    const [preRender, setPreRender] = useState<boolean>(false);\n    const [fileName, setFileName] = useState<string>(undefined);\n    const [loading, setLoading] = React.useState(false);\n\n    const useActiveBlockchain = blockchainService.getBlockchainGetUseUseCase().getUseActive()\n    const [ , account, , library ] = useActiveBlockchain();\n\n    const onChange = (t: Topic) => { setNews((n) => { return { ...n, topic: t } }) }\n    const handleChangePreRender = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setPreRender(event.target.checked);\n    };\n\n    const setContent = (e: any) => {\n        const target = (e.target as HTMLInputElement)\n        setFileName(target.files[0].name)\n        target.files[0].text().then(s =>\n            setNews((n) => {\n                return { ...n, content: s }\n            }))\n    }\n\n    const onSummit = () => {\n        setLoading(true)\n        newsService.getNewsPostUseCase()\n            .post(new News(undefined, news.content, news.topic, undefined), library)\n            .then(() => toast.success(t(\"succesful-news-post\"))) \n            .catch((error: Error) => toast.error(t(error.message)))\n            .finally(() => setLoading(false))\n    }\n\n    return (\n        <>\n            <div className={classes.rowContainer}>\n                <Container title={t(\"publish-news\")}>\n                    <div className={classes.rowContainer}>\n                        <div className={classes.textContainer}>\n                            <Typography className={classes.text} variant=\"h6\">{fileName ? fileName : t(\"select-markdown\")}</Typography>\n                        </div>\n                        <Fragment>\n                            <input color=\"primary\" accept=\"text/markdown\" type=\"file\" onChange={setContent} id=\"button-file\" style={{ display: 'none', }} />\n                            <label htmlFor=\"button-file\">\n                                <Button component=\"span\" className={classes.button}>\n                                    <Typography variant=\"h6\">{t(\"browse-files\")}</Typography>\n                                </Button>\n                            </label>\n                        </Fragment>\n                    </div>\n                    <div className={classes.rowContainer}>\n                        <SelectTopic selectedOption={news.topic} onChange={onChange} />\n                    </div>\n                    <div className={classes.rowContainer}>\n                        <FormControlLabel\n                            control={<Checkbox checked={preRender} onChange={handleChangePreRender} color=\"primary\" />} label={t(\"pre-render\")} />\n                    </div>\n                    {news.topic && <LockInfo lockCost={news.topic.costPublish} library={library} account={account} />}\n                    <div className={classes.rowContainer} style={{ position: 'relative', }}>\n                        <Button className={classes.buttonPublish} onClick={onSummit}\n                            disabled={loading || !news.content || !news.topic}>\n                            <Typography variant=\"h6\">{t(\"publish\")}</Typography>\n                        </Button>\n                        {loading && <CircularProgress size={24} className={classes.buttonProgress} />}\n                    </div>\n                </Container>\n            </div>\n            {\n                preRender && !!news.content && <NewsRender>{news.content}</NewsRender>\n            }\n        </>\n    )\n}\n","import { makeStyles } from \"@material-ui/styles\";\n\nexport default makeStyles(theme => ({\n    rowContainer: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        justifyContent: \"center\",\n        padding: \"1.1rem\",\n        \"& .MuiOutlinedInput-root\": {\n            borderRadius: 15,\n        },\n        \"& .MuiOutlinedInput-notchedOutline\": {\n            borderRadius: 15,\n        },\n    },\n    button: {\n        textTransform: \"none\",\n        backgroundColor: \"none\",\n        color: \"#000000\",\n        borderRadius: 15,\n        border: `1px solid ${theme.palette.primary.main}`,\n        \"&:hover\": {\n            backgroundColor: \"#edeef2\",\n            border: `1px solid ${theme.palette.primary.main}`,\n        }\n    },\n    error: {\n        color: \"#ff0033\"\n    },\n    iconButton: {\n        float: \"right\",\n        padding: \"0\",\n    },\n    spaceBetween: {\n        justifyContent: 'space-between',\n        borderRadius: 15,\n        border: `1px solid ${theme.palette.primary.main}`,\n        marginBottom: \"0.5rem\",\n        padding: \"1.1rem\",\n    },\n    buttonRegistry: {\n        textTransform: \"none\",\n        color: \"#FFFFFF\",\n        backgroundColor: theme.palette.primary.main,\n        borderRadius: 15,\n        border: `1px solid ${theme.palette.primary.main}`,\n        width: \"100%\",\n        \"&:hover\": {\n            backgroundColor: theme.palette.primary.light\n        },\n        \"&.MuiButton-root.Mui-disabled\": {\n            backgroundColor: \"#FFFFFF\",\n            border: \"none\"\n        }\n    },\n    buttonProgress: {\n        color:  theme.palette.primary.light,\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        marginTop: -12,\n        marginLeft: -12,\n    },\n}));\n","import React, { useEffect, useState } from \"react\";\nimport Container from \"../Container/Container\";\nimport useStyles from \"./styles\";\nimport { useTranslation } from 'react-i18next';\nimport SelectTopic from \"../SelectTopic/SelectTopic\";\nimport Topic from \"@domain/models/Topic/Topic\";\nimport NumberFormat from 'react-number-format';\nimport { Button, IconButton, TextField, Typography } from \"@material-ui/core\";\nimport CloseIcon from '@material-ui/icons/Close';\nimport classnames from \"classnames\";\nimport LockInfo from \"../LockInfo/LockInfo\";\nimport { container } from \"@container-inversify\";\nimport { TYPES } from \"@constants/types\";\nimport TopicService from \"@configuration/usecases/TopicService\";\nimport BlockchainService from \"@configuration/usecases/BlockchainService\";\nimport { toast } from 'react-toastify';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Pagination from \"@domain/models/Pagination/Pagination\";\n\nconst topicService = container.get<TopicService>(TYPES.TopicService);\nconst blockchainService = container.get<BlockchainService>(TYPES.BlockchainService);\n\nexport default function JuryForm() {\n    const { t } = useTranslation();\n    const classes = useStyles();\n\n    const [currentTopic, setCurrentTopic] = useState<Topic>(undefined);\n    const [currentQuantity, setCurrentQuantity] = useState<string>(undefined);\n    const [suscribeTopics, setSuscribeTopics] = useState<{ topic: Topic, quantity: number }[]>([]);\n    const [selectedTopics, setSelectedTopics] = useState<{ topic: Topic, quantity: number }[]>([])\n    const [errorMenssage, setErorMenssage] = useState<string>(undefined)\n    const [cost, setCost] = useState<number>(0);\n    const [loading, setLoading] = React.useState(false);\n\n    const useActiveBlockchain = blockchainService.getBlockchainGetUseUseCase().getUseActive()\n    const [, account, , library] = useActiveBlockchain();\n\n    const onChange = (t: Topic) => { setCurrentTopic(t) }\n    const onAdd = () => {\n        if (currentTopic && currentQuantity) {\n            setSelectedTopics(topics => {\n                setErorMenssage(undefined)\n                setCost(c => c + currentTopic.costJury * (+currentQuantity))\n                return [...topics, { topic: currentTopic, quantity: +currentQuantity }]\n            })\n        }\n        else {\n            setErorMenssage(t(\"jury-form-incomplete\"))\n        }\n    }\n    const onSummit = () => {\n        setLoading(true)\n        topicService.getTopicSubscribeUsecase().subscribe(selectedTopics, library)\n            .then(() => toast.success(t(\"succesful-sucribe-topic\"))) //TODO improve Promise.All\n            .catch((error) => toast.error(t(error.message)))\n            .finally(() => setLoading(false))\n    }\n\n    useEffect(() => {\n        topicService.getTopicListByAddressUseCase().listByAddress(new Pagination(5, 0), account)\n            .then((topics) => setSuscribeTopics(topics))\n            .catch((error) => toast.error(t(error.message)))\n    }, [account, t])\n\n    return (\n        <>\n            <div className={classes.rowContainer}>\n                <Container title={t(\"registry\")}>\n                    <div className={classes.rowContainer}>\n                        <SelectTopic selectedOption={currentTopic} onChange={onChange} />\n                        <TextField variant=\"outlined\" label={t(\"quantity\")} value={currentQuantity}\n                            onChange={(event) => { setCurrentQuantity(event.target.value) }}\n                            InputProps={{ inputComponent: NumberFormatCustom as any }} />\n                        <Button onClick={onAdd} className={classes.button}>\n                            <Typography variant=\"h6\">{t(\"add\")}</Typography>\n                        </Button>\n                    </div>\n                    {errorMenssage && <Typography className={classes.error}>{errorMenssage}</Typography>}\n                    {\n                        selectedTopics.map((t, i) => {\n                            const onRemove = () => {\n                                setSelectedTopics(topic => {\n                                    const newTopics = [...topic]\n                                    newTopics.splice(i, 1)\n                                    setCost(c => c - t.topic.costJury * t.quantity)\n                                    return newTopics\n                                })\n                            }\n                            return (\n                                <div className={classnames(classes.rowContainer, classes.spaceBetween)}>\n                                    <Typography variant=\"h6\">{t.topic.name}</Typography>\n                                    <Typography variant=\"h6\">{t.quantity}</Typography>\n                                    <IconButton className={classes.iconButton} onClick={onRemove}>\n                                        <CloseIcon />\n                                    </IconButton>\n                                </div>\n                            )\n                        })\n                    }\n                    {selectedTopics.length !== 0 && <LockInfo lockCost={cost} library={library} account={account} />}\n                    <div className={classes.rowContainer} style={{ position: 'relative', }}>\n                        <Button className={classes.buttonRegistry} onClick={onSummit}\n                            disabled={loading || selectedTopics.length === 0}>\n                            <Typography variant=\"h6\">{t(\"regiter-jury\")}</Typography>\n                        </Button>\n                        {loading && <CircularProgress size={24} className={classes.buttonProgress} />}\n                    </div>\n                </Container>\n            </div>\n            {\n                suscribeTopics &&\n                <div className={classes.rowContainer}>\n                    <Container title={t(\"suscriptions\")}>\n                        {\n                            suscribeTopics.filter(t => {\n                                return t.quantity !== 0\n                            }).map((t, i) => {\n                                return (\n                                    <div className={classnames(classes.rowContainer, classes.spaceBetween)}>\n                                        <Typography variant=\"h6\" style={{marginRight:\"1rem\"}}>{t.topic.name}</Typography>\n                                        <Typography variant=\"h6\" style={{marginLeft:\"1rem\"}}>{t.quantity}</Typography>\n                                    </div>\n                                )\n                            })\n                        }\n                    </Container>\n                </div>\n            }\n        </>\n    )\n}\n\ninterface NumberFormatCustomProps {\n    inputRef: (instance: NumberFormat | null) => void;\n    onChange: (event: { target: { name: string; value: string } }) => void;\n    name: string;\n}\n\nfunction NumberFormatCustom(props: NumberFormatCustomProps) {\n    const { inputRef, onChange, ...other } = props;\n    return (\n        <NumberFormat\n            {...other}\n            getInputRef={inputRef}\n            onValueChange={(values: any) => {\n                onChange({\n                    target: {\n                        name: props.name,\n                        value: values.value,\n                    },\n                });\n            }}\n            thousandSeparator\n        />\n    )\n}\n","import { makeStyles } from \"@material-ui/styles\";\n\nexport default makeStyles(theme => ({\n    rowContainer: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        justifyContent: \"center\",\n        padding: \"1.1rem\",\n        \"& .MuiOutlinedInput-root\": {\n            borderRadius: 15,\n        },\n        \"& .MuiOutlinedInput-notchedOutline\": {\n            borderRadius: 15,\n        },\n    },\n    buttonPublication: {\n        textTransform: \"none\",\n        color: theme.palette.primary.main,\n        borderRadius: 20,\n        border: `1px solid ${theme.palette.primary.main}`,\n        \"&:hover\": {\n            backgroundColor: \"none\",\n            textDecoration: \"underline\"\n        }\n    },\n    button: {\n        textTransform: \"none\",\n        color: \"#FFFFFF\",\n        backgroundColor: theme.palette.primary.main,\n        borderRadius: 15,\n        border: `1px solid ${theme.palette.primary.main}`,\n        width: \"100%\",\n        \"&:hover\": {\n            backgroundColor: theme.palette.primary.light\n        },\n        \"&.MuiButton-root.Mui-disabled\": {\n            backgroundColor: \"#FFFFFF\",\n            border: \"none\"\n        }\n    },\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 820,\n    },\n    error: {\n        color: \"#ff0033\"\n    },\n    buttonProgress: {\n        color:  theme.palette.primary.light,\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        marginTop: -12,\n        marginLeft: -12,\n    },\n    rowRuleContainer: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        padding: \"1.1rem\",\n        \"& .MuiOutlinedInput-root\": {\n            borderRadius: 15,\n        },\n        \"& .MuiOutlinedInput-notchedOutline\": {\n            borderRadius: 15,\n        },\n    },\n    ruleLabel: {\n        fontWeight: 'bold'\n    }\n}));\n","import React, { useState } from \"react\";\nimport useStyles from \"./styles\";\nimport { useTranslation } from 'react-i18next';\nimport Container from \"../Container/Container\";\nimport { Button, FormControl, InputLabel, Select, TextField, Typography } from \"@material-ui/core\";\nimport { VOTE_VALUE, VOTE_VALUES } from \"@constants/vote_value\";\nimport { useParams } from \"react-router\";\nimport Vote from \"@domain/models/Vote/Vote\";\nimport VoteService from \"@configuration/usecases/VoteService\";\nimport { container } from \"@container-inversify\";\nimport { TYPES } from \"@constants/types\";\nimport BlockchainService from \"@configuration/usecases/BlockchainService\";\nimport { toast } from 'react-toastify';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { URLS } from \"@constants/urls\";\nimport { Link } from \"react-router-dom\";\n\nconst voteService = container.get<VoteService>(TYPES.VoteService);\nconst blockchainService = container.get<BlockchainService>(TYPES.BlockchainService);\n\ntype Props = {\n    isReveal: boolean\n}\n\nexport default function VoteForm({ isReveal }: Props) {\n    const { t } = useTranslation();\n    const classes = useStyles();\n\n    const id = Number.parseFloat(useParams<{ id: string }>().id);\n\n    const [voteValue, setVoteValue] = useState<VOTE_VALUE>(undefined);\n    const [justification, setJustification] = useState<string>(undefined);\n    const useActiveBlockchain = blockchainService.getBlockchainGetUseUseCase().getUseActive()\n    const [, , , library] = useActiveBlockchain();\n    const [loading, setLoading] = React.useState(false);\n\n    const onSummit = () => {\n        setLoading(true)\n        if (isReveal) {\n            voteService.getVoteRevealUsecase()\n                .reveal(new Vote(voteValue, id, justification), library)\n                .then(() => toast.success(t(\"succesful-vote-reveal\")))\n                .catch((error: Error) => toast.error(t(error.message)))\n                .finally(() => setLoading(false))\n        }\n        else {\n            voteService.getVoteCommitUseCase()\n                .commit(new Vote(voteValue, id), library)\n                    .then(() => toast.success(t(\"succesful-vote-commit\")))\n                    .catch((error: Error) => toast.error(t(error.message)))\n                    .finally(() => setLoading(false))\n        }\n    }\n\n    return (\n        <div className={classes.rowContainer}>\n            <Container title={t(`${isReveal ? \"reveal\" : \"vote\"}-news`)} icon={(\n                <Button className={classes.buttonPublication} component={Link} to={URLS.news.replace(\":id\", \"\"+id)}>\n                    <Typography variant=\"body2\">{t(\"go-to-publication\")}</Typography>\n                </Button>\n            )}>\n                {\n                    !isReveal && (\n                    <div>\n                        {\n                            VOTE_VALUES.map((voteValue) => {\n                                if (voteValue !== VOTE_VALUE.None) {\n                                    return (\n                                        <div className={classes.rowRuleContainer}>\n                                            <Typography>\n                                                <span className={classes.ruleLabel}>{t(\"vote-rule-label-\" + voteValue)}: </span>\n                                                {t(\"vote-rule-description-\" + voteValue)}\n                                            </Typography>\n                                        </div>\n                                    )\n                                }\n                                return null\n                            })\n                        }\n                    </div>\n                )\n                }\n                <div className={classes.rowContainer}>\n            <FormControl variant=\"outlined\" className={classes.formControl}>\n                <InputLabel>{t(\"select-vote-value\")}</InputLabel>\n                <Select native value={voteValue} label={t(\"select-vote-value\")}\n                    onChange={(e) => setVoteValue(e.target.value as VOTE_VALUE)} >\n                    {\n                        VOTE_VALUES.map((voteValue) => {\n                            if (voteValue === VOTE_VALUE.None) {\n                                return <option aria-label=\"None\" value={undefined} />\n                            }\n                            return <option value={voteValue}>{t(\"vote-value-\" + voteValue)}</option>\n                        })\n                    }\n                </Select>\n            </FormControl>\n        </div>\n                {\n        isReveal && (\n            <div className={classes.rowContainer}>\n                <TextField className={classes.formControl} label={t(\"justification\")}\n                    multiline rows={4} variant=\"outlined\" onChange={(e) => setJustification(e.target.value as string)} />\n            </div>\n        )\n    }\n    <div className={classes.rowContainer} style={{ position: 'relative', }}>\n        <Button className={classes.button} onClick={onSummit}\n            disabled={loading || voteValue === undefined || (justification === undefined && isReveal)}>\n            <Typography variant=\"h6\">{t(isReveal ? \"reveal\" : \"vote\")}</Typography>\n        </Button>\n        {loading && <CircularProgress size={24} className={classes.buttonProgress} />}\n    </div>\n            </Container >\n        </div >\n    )\n}\n","\nimport React from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport Error from \"@entrypoint/presenters/web/components/Error/Error\";\nimport withLayout from \"@entrypoint/presenters/web/components/Layout/withLayout\";\nimport withAuthorization from \"@entrypoint/presenters/web/components/Authorization/withAuthorization\";\nimport NewsList from \"@entrypoint/presenters/web/components/NewsList/NewsList\";\nimport NewsPage from \"@entrypoint/presenters/web/components/NewsPage/NewsPage\";\nimport NewsForm from \"@entrypoint/presenters/web/components/NewsForm/NewsForm\";\nimport JuryForm from \"@entrypoint/presenters/web/components/JuryForm/JuryForm\";\nimport VoteForm from \"@entrypoint/presenters/web/components/VoteForm/VoteForm\";\nimport { URLS } from \"@constants/urls\";\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport { makeStyles } from \"@material-ui/styles\";\n\nconst useStyles = makeStyles(theme => ({\n  toast: {\n    borderRadius: \"20px\"\n  },\n}));\n\nexport default function App() {\n\n  const classes = useStyles();\n\n  return (\n    <>\n      <BrowserRouter>\n        <Switch>\n          <Route exact path={URLS.home} component={withLayout(NewsList)} />\n          <Route exact path={URLS.revealForm} component={withAuthorization(withLayout(() => <VoteForm isReveal={true} />))} />\n          <Route exact path={URLS.voteForm} component={withAuthorization(withLayout(() => <VoteForm isReveal={false} />))} />\n          <Route exact path={URLS.juryForm} component={withAuthorization(withLayout(JuryForm))} />\n          <Route exact path={URLS.newsForm} component={withAuthorization(withLayout(NewsForm))} />\n          <Route exact path={URLS.news} component={withLayout(NewsPage)} />\n          <Route component={() => <Error code={\"404\"}/>} />\n        </Switch>\n      </BrowserRouter>\n      <ToastContainer toastClassName={classes.toast} position=\"bottom-center\" />\n    </>\n  );\n}\n","import React, { Suspense } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport { CssBaseline } from \"@material-ui/core\";\n// import * as serviceWorker from \"./serviceWorker\";\nimport Themes from \"@entrypoint/presenters/web/themes\";\nimport store from \"@entrypoint/presenters/web/store/store\";\nimport App from \"@entrypoint/presenters/web/App\";\nimport '@entrypoint/presenters/web/components/Translation/I18next';\nimport i18n from \"i18next\";\n\nimport { createWeb3ReactRoot, Web3ReactProvider } from '@web3-react/core'\nimport { Web3Provider } from '@ethersproject/providers'\n\nconst getLibrary = (provider: any): Web3Provider => {\n  const library = new Web3Provider(\n    provider,\n    typeof provider.chainId === 'number'\n      ? provider.chainId\n      : typeof provider.chainId === 'string'\n        ? parseInt(provider.chainId)\n        : 'any'\n  )\n  library.pollingInterval = 15000\n  return library\n}\n\nconst Web3ProviderNetwork = createWeb3ReactRoot('NETWORK')\n\nReactDOM.render(\n  <Suspense fallback={(<div>{i18n.t(\"loading\")}</div>)}>\n    <Web3ReactProvider getLibrary={getLibrary}>\n      <Web3ProviderNetwork getLibrary={getLibrary}>\n        <Provider store={store}>\n          <ThemeProvider theme={Themes}>\n            <CssBaseline />\n            <App />\n          </ThemeProvider>\n        </Provider>\n      </Web3ProviderNetwork>\n    </Web3ReactProvider>\n  </Suspense>,\n  document.getElementById(\"root\"),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}